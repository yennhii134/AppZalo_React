{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axiosInstance from \"../components/configs/axiosInstance\";\nvar useLogout = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var authUser = yield AsyncStorage.getItem(\"authUser\");\n      var accessToken = yield AsyncStorage.getItem('accessToken');\n      var refreshToken = yield AsyncStorage.getItem('refreshToken');\n      console.log('authUser: ', authUser);\n      console.log('accessToken: ', accessToken);\n      console.log('refreshToken: ', refreshToken);\n      if (refreshToken !== null) {\n        var response = yield axiosInstance.post(\"/api/auth/logout\", {\n          headers: {\n            Authorization: `JWT ${refreshToken}`\n          }\n        });\n        if (response.data.success) {\n          yield AsyncStorage.removeItem('accessToken');\n          yield AsyncStorage.removeItem('refreshToken');\n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  });\n  return function useLogout() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default useLogout;","map":{"version":3,"names":["AsyncStorage","axiosInstance","useLogout","_ref","_asyncToGenerator","authUser","getItem","accessToken","refreshToken","console","log","response","post","headers","Authorization","data","success","removeItem","error","apply","arguments"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/hooks/useLogout.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axiosInstance from \"../components/configs/axiosInstance\";\r\n\r\nconst useLogout = async () => {\r\n    try {\r\n        // Kiểm tra token\r\n        const authUser = await AsyncStorage.getItem(\"authUser\");\r\n        const accessToken = await AsyncStorage.getItem('accessToken');\r\n        const refreshToken = await AsyncStorage.getItem('refreshToken')\r\n  \r\n        console.log('authUser: ', authUser)\r\n        console.log('accessToken: ', accessToken)\r\n        console.log('refreshToken: ', refreshToken)\r\n\r\n        // Gửi yêu cầu logout tới server\r\n        if (refreshToken !== null) {\r\n          const response = await axiosInstance.post(\"/api/auth/logout\", {\r\n            headers: {\r\n              Authorization: `JWT ${refreshToken}`\r\n            }\r\n          });\r\n  \r\n          if (response.data.success) {\r\n            await AsyncStorage.removeItem('accessToken');\r\n            await AsyncStorage.removeItem('refreshToken');\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n  \r\n      } catch (error) {\r\n        // Xử lý lỗi mạng hoặc lỗi khác\r\n        console.error(\"Error during login\", error);\r\n      }\r\n}\r\n\r\nexport default useLogout;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,OAAOC,aAAa;AAEpB,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC1B,IAAI;MAEA,IAAMC,QAAQ,SAASL,YAAY,CAACM,OAAO,CAAC,UAAU,CAAC;MACvD,IAAMC,WAAW,SAASP,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;MAC7D,IAAME,YAAY,SAASR,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC;MAE/DG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,QAAQ,CAAC;MACnCI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,CAAC;MACzCE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,CAAC;MAG3C,IAAIA,YAAY,KAAK,IAAI,EAAE;QACzB,IAAMG,QAAQ,SAASV,aAAa,CAACW,IAAI,CAAC,kBAAkB,EAAE;UAC5DC,OAAO,EAAE;YACPC,aAAa,EAAG,OAAMN,YAAa;UACrC;QACF,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UACzB,MAAMhB,YAAY,CAACiB,UAAU,CAAC,aAAa,CAAC;UAC5C,MAAMjB,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;UAC7C,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IAEd,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEdT,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACN,CAAC;EAAA,gBA/BKhB,SAASA,CAAA;IAAA,OAAAC,IAAA,CAAAgB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+Bd;AAED,eAAelB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}