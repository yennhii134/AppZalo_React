{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createTheming } from '@callstack/react-theme-provider';\nimport color from 'color';\nimport { MD2DarkTheme, MD2LightTheme, MD3DarkTheme, MD3LightTheme } from '../styles/themes';\nexport const DefaultTheme = MD3LightTheme;\nexport const {\n  ThemeProvider,\n  withTheme,\n  useTheme: useAppTheme\n} = createTheming(MD3LightTheme);\nexport function useTheme(overrides) {\n  return useAppTheme(overrides);\n}\nexport const useInternalTheme = themeOverrides => useAppTheme(themeOverrides);\nexport const withInternalTheme = WrappedComponent => withTheme(WrappedComponent);\nexport const defaultThemesByVersion = {\n  2: {\n    light: MD2LightTheme,\n    dark: MD2DarkTheme\n  },\n  3: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme\n  }\n};\nexport const getTheme = function () {\n  let isDark = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let isV3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const themeVersion = isV3 ? 3 : 2;\n  const scheme = isDark ? 'dark' : 'light';\n  return defaultThemesByVersion[themeVersion][scheme];\n};\nexport function adaptNavigationTheme(themes) {\n  const {\n    reactNavigationLight,\n    reactNavigationDark,\n    materialLight,\n    materialDark\n  } = themes;\n  const getAdaptedTheme = (navigationTheme, MD3Theme) => {\n    return _objectSpread(_objectSpread({}, navigationTheme), {}, {\n      colors: _objectSpread(_objectSpread({}, navigationTheme.colors), {}, {\n        primary: MD3Theme.colors.primary,\n        background: MD3Theme.colors.background,\n        card: MD3Theme.colors.elevation.level2,\n        text: MD3Theme.colors.onSurface,\n        border: MD3Theme.colors.outline,\n        notification: MD3Theme.colors.error\n      })\n    });\n  };\n  const MD3Themes = {\n    light: materialLight || MD3LightTheme,\n    dark: materialDark || MD3DarkTheme\n  };\n  if (reactNavigationLight && reactNavigationDark) {\n    const modes = ['light', 'dark'];\n    const NavigationThemes = {\n      light: reactNavigationLight,\n      dark: reactNavigationDark\n    };\n    const {\n      light: adaptedLight,\n      dark: adaptedDark\n    } = modes.reduce((prev, curr) => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [curr]: getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr])\n      });\n    }, {\n      light: reactNavigationLight,\n      dark: reactNavigationDark\n    });\n    return {\n      LightTheme: adaptedLight,\n      DarkTheme: adaptedDark\n    };\n  }\n  if (reactNavigationDark) {\n    return {\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark)\n    };\n  }\n  return {\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light)\n  };\n}\nexport const getDynamicThemeElevations = scheme => {\n  const elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n  return elevationValues.reduce((elevations, elevationValue, index) => {\n    return _objectSpread(_objectSpread({}, elevations), {}, {\n      [`level${index}`]: index === 0 ? elevationValue : color(scheme.surface).mix(color(scheme.primary), elevationValue).rgb().string()\n    });\n  }, {});\n};","map":{"version":3,"names":["createTheming","color","MD2DarkTheme","MD2LightTheme","MD3DarkTheme","MD3LightTheme","DefaultTheme","ThemeProvider","withTheme","useTheme","useAppTheme","overrides","useInternalTheme","themeOverrides","withInternalTheme","WrappedComponent","defaultThemesByVersion","light","dark","getTheme","isDark","arguments","length","undefined","isV3","themeVersion","scheme","adaptNavigationTheme","themes","reactNavigationLight","reactNavigationDark","materialLight","materialDark","getAdaptedTheme","navigationTheme","MD3Theme","_objectSpread","colors","primary","background","card","elevation","level2","text","onSurface","border","outline","notification","error","MD3Themes","modes","NavigationThemes","adaptedLight","adaptedDark","reduce","prev","curr","LightTheme","DarkTheme","getDynamicThemeElevations","elevationValues","elevations","elevationValue","index","surface","mix","rgb","string"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\core\\theming.tsx"],"sourcesContent":["import type { ComponentType } from 'react';\n\nimport { $DeepPartial, createTheming } from '@callstack/react-theme-provider';\nimport color from 'color';\n\nimport {\n  MD2DarkTheme,\n  MD2LightTheme,\n  MD3DarkTheme,\n  MD3LightTheme,\n} from '../styles/themes';\nimport type {\n  InternalTheme,\n  MD3Theme,\n  MD3AndroidColors,\n  NavigationTheme,\n} from '../types';\n\nexport const DefaultTheme = MD3LightTheme;\n\nexport const {\n  ThemeProvider,\n  withTheme,\n  useTheme: useAppTheme,\n} = createTheming<unknown>(MD3LightTheme);\n\nexport function useTheme<T = MD3Theme>(overrides?: $DeepPartial<T>) {\n  return useAppTheme<T>(overrides);\n}\n\nexport const useInternalTheme = (\n  themeOverrides: $DeepPartial<InternalTheme> | undefined\n) => useAppTheme<InternalTheme>(themeOverrides);\n\nexport const withInternalTheme = <Props extends { theme: InternalTheme }, C>(\n  WrappedComponent: ComponentType<Props & { theme: InternalTheme }> & C\n) => withTheme<Props, C>(WrappedComponent);\n\nexport const defaultThemesByVersion = {\n  2: {\n    light: MD2LightTheme,\n    dark: MD2DarkTheme,\n  },\n  3: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme,\n  },\n};\n\nexport const getTheme = <\n  Scheme extends boolean = false,\n  IsVersion3 extends boolean = true\n>(\n  isDark: Scheme = false as Scheme,\n  isV3: IsVersion3 = true as IsVersion3\n): (typeof defaultThemesByVersion)[IsVersion3 extends true\n  ? 3\n  : 2][Scheme extends true ? 'dark' : 'light'] => {\n  const themeVersion = isV3 ? 3 : 2;\n  const scheme = isDark ? 'dark' : 'light';\n\n  return defaultThemesByVersion[themeVersion][scheme];\n};\n\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  materialLight?: MD3Theme;\n}): {\n  LightTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationDark: NavigationTheme;\n  materialDark?: MD3Theme;\n}): {\n  DarkTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  reactNavigationDark: NavigationTheme;\n  materialLight?: MD3Theme;\n  materialDark?: MD3Theme;\n}): { LightTheme: NavigationTheme; DarkTheme: NavigationTheme };\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: any) {\n  const {\n    reactNavigationLight,\n    reactNavigationDark,\n    materialLight,\n    materialDark,\n  } = themes;\n\n  const getAdaptedTheme = (\n    navigationTheme: NavigationTheme,\n    MD3Theme: MD3Theme\n  ) => {\n    return {\n      ...navigationTheme,\n      colors: {\n        ...navigationTheme.colors,\n        primary: MD3Theme.colors.primary,\n        background: MD3Theme.colors.background,\n        card: MD3Theme.colors.elevation.level2,\n        text: MD3Theme.colors.onSurface,\n        border: MD3Theme.colors.outline,\n        notification: MD3Theme.colors.error,\n      },\n    };\n  };\n\n  const MD3Themes = {\n    light: materialLight || MD3LightTheme,\n    dark: materialDark || MD3DarkTheme,\n  };\n\n  if (reactNavigationLight && reactNavigationDark) {\n    const modes = ['light', 'dark'] as const;\n\n    const NavigationThemes = {\n      light: reactNavigationLight,\n      dark: reactNavigationDark,\n    };\n\n    const { light: adaptedLight, dark: adaptedDark } = modes.reduce(\n      (prev, curr) => {\n        return {\n          ...prev,\n          [curr]: getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr]),\n        };\n      },\n      {\n        light: reactNavigationLight,\n        dark: reactNavigationDark,\n      }\n    );\n\n    return {\n      LightTheme: adaptedLight,\n      DarkTheme: adaptedDark,\n    };\n  }\n\n  if (reactNavigationDark) {\n    return {\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark),\n    };\n  }\n\n  return {\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light),\n  };\n}\n\nexport const getDynamicThemeElevations = (scheme: MD3AndroidColors) => {\n  const elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n  return elevationValues.reduce((elevations, elevationValue, index) => {\n    return {\n      ...elevations,\n      [`level${index}`]:\n        index === 0\n          ? elevationValue\n          : color(scheme.surface)\n              .mix(color(scheme.primary), elevationValue as number)\n              .rgb()\n              .string(),\n    };\n  }, {});\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}