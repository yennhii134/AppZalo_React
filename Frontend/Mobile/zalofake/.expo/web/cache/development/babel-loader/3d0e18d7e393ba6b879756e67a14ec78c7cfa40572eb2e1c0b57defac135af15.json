{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\nconst FA6Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n  sharp: 'sharp',\n  sharpLight: 'sharpLight',\n  sharpSolid: 'sharpSolid',\n  duotone: 'duotone',\n  thin: 'thin'\n};\nfunction createFA6iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome6${pro ? 'Pro' : 'Free'}`;\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n    return 'regular';\n  }\n  function glyphValidator(glyph, style) {\n    let family = style === 'brand' ? 'brands' : style;\n    family = style === 'sharpSolid' ? 'sharp-solid' : family;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    const fontFile = fonts[styleName];\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n    }\n    if (styleName === 'Duotone') {\n      styleName = 'Solid';\n    }\n    styleName = styleName.replace('Sharp_', '');\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight\n        },\n        default: {}\n      }),\n      glyphMap\n    };\n  }\n  const brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome6Brands');\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const sharpLightIcons = createFontAwesomeStyle('Sharp_Light', '300', 'FontAwesome6Sharp');\n  const sharpIcons = createFontAwesomeStyle('Sharp_Regular', '400', 'FontAwesome6Sharp');\n  const sharpSolidIcons = createFontAwesomeStyle('Sharp_Solid', '900', 'FontAwesome6Sharp');\n  const duotoneIcons = createFontAwesomeStyle('Duotone', '900', 'FontAwesome6Duotone');\n  const thinIcons = createFontAwesomeStyle('Thin', '100');\n  const Icon = createMultiStyleIconSet({\n    brand: brandIcons,\n    light: lightIcons,\n    regular: regularIcons,\n    solid: solidIcons,\n    sharp: sharpIcons,\n    sharpLight: sharpLightIcons,\n    sharpSolid: sharpSolidIcons,\n    duotone: duotoneIcons,\n    thin: thinIcons\n  }, {\n    defaultStyle: 'regular',\n    fallbackFamily,\n    glyphValidator\n  });\n  return Icon;\n}\nexport { createFA6iconSet, FA6Style };","map":{"version":3,"names":["createMultiStyleIconSet","FA6Style","regular","light","solid","brand","sharp","sharpLight","sharpSolid","duotone","thin","createFA6iconSet","glyphMap","metadata","fonts","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","replace","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","sharpLightIcons","sharpIcons","sharpSolidIcons","duotoneIcons","thinIcons","Icon","defaultStyle"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\@expo\\vector-icons\\src\\createIconSetFromFontAwesome6.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nconst FA6Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n  sharp: 'sharp',\n  sharpLight: 'sharpLight',\n  sharpSolid: 'sharpSolid',\n  duotone: 'duotone',\n  thin: 'thin',\n};\n\nfunction createFA6iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome6${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    let family = style === 'brand' ? 'brands' : style;\n    family = style === 'sharpSolid' ? 'sharp-solid' : family;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n\n    const fontFile = fonts[styleName];\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n    }\n\n    if (styleName === 'Duotone') {\n      styleName = 'Solid';\n    }\n\n    styleName = styleName.replace('Sharp_', '');\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome6Brands');\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const sharpLightIcons = createFontAwesomeStyle('Sharp_Light', '300', 'FontAwesome6Sharp');\n  const sharpIcons = createFontAwesomeStyle('Sharp_Regular', '400', 'FontAwesome6Sharp');\n  const sharpSolidIcons = createFontAwesomeStyle('Sharp_Solid', '900', 'FontAwesome6Sharp');\n  const duotoneIcons = createFontAwesomeStyle('Duotone', '900', 'FontAwesome6Duotone');\n  const thinIcons = createFontAwesomeStyle('Thin', '100');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n      sharp: sharpIcons,\n      sharpLight: sharpLightIcons,\n      sharpSolid: sharpSolidIcons,\n      duotone: duotoneIcons,\n      thin: thinIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n\nexport { createFA6iconSet, FA6Style };\n"],"mappings":";AAEA,OAAOA,uBAAuB,MAAM,2BAA2B;AAE/D,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,YAAY;EACxBC,UAAU,EAAE,YAAY;EACxBC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE;CACP;AAED,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,QAAQ,GAAG,EAAE,EAAEC,KAAK,EAAEC,GAAG,GAAG,KAAK;EACnE,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC;EAC1C,MAAMM,UAAU,GAAG,eAAeJ,GAAG,GAAG,KAAK,GAAG,MAAM,EAAE;EAExD,SAASK,cAAcA,CAACC,KAAK;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC/C,MAAME,MAAM,GAAGR,YAAY,CAACM,CAAC,CAAC;MAC9B,IAAIT,QAAQ,CAACW,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1C,OAAOG,MAAM,KAAK,QAAQ,GAAG,OAAO,GAAGA,MAAM;MAC/C;IACF;IAEA,OAAO,SAAS;EAClB;EAEA,SAASE,cAAcA,CAACL,KAAK,EAAEM,KAAK;IAClC,IAAIH,MAAM,GAAGG,KAAK,KAAK,OAAO,GAAG,QAAQ,GAAGA,KAAK;IACjDH,MAAM,GAAGG,KAAK,KAAK,YAAY,GAAG,aAAa,GAAGH,MAAM;IACxD,IAAIR,YAAY,CAACS,OAAO,CAACD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;IACrD,OAAOX,QAAQ,CAACW,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,KAAK,CAAC,CAAC;EAC/C;EAEA,SAASO,sBAAsBA,CAACD,KAAK,EAAEE,UAAU,EAAEL,MAAM,GAAGL,UAAU;IACpE,IAAIW,SAAS,GAAGH,KAAK;IAErB,MAAMI,QAAQ,GAAGjB,KAAK,CAACgB,SAAS,CAAC;IAEjC,IAAIA,SAAS,KAAK,QAAQ,EAAE;MAC1BA,SAAS,GAAG,SAAS;IACvB;IAEA,IAAIA,SAAS,KAAK,SAAS,EAAE;MAC3BA,SAAS,GAAG,OAAO;IACrB;IAEAA,SAAS,GAAGA,SAAS,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAE3C,OAAO;MACLb,UAAU,EAAE,GAAGK,MAAM,IAAIM,SAAS,EAAE;MACpCC,QAAQ;MACRE,SAAS,EAAEC,QAAQ,CAACC,MAAM,CAAC;QACzBC,GAAG,EAAE;UACHP;SACD;QACDQ,OAAO,EAAE;OACV,CAAC;MACFzB;KACD;EACH;EAEA,MAAM0B,UAAU,GAAGV,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,oBAAoB,CAAC;EAChF,MAAMW,UAAU,GAAGX,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC;EACzD,MAAMY,YAAY,GAAGZ,sBAAsB,CAAC,SAAS,EAAE,KAAK,CAAC;EAC7D,MAAMa,UAAU,GAAGb,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC;EACzD,MAAMc,eAAe,GAAGd,sBAAsB,CAAC,aAAa,EAAE,KAAK,EAAE,mBAAmB,CAAC;EACzF,MAAMe,UAAU,GAAGf,sBAAsB,CAAC,eAAe,EAAE,KAAK,EAAE,mBAAmB,CAAC;EACtF,MAAMgB,eAAe,GAAGhB,sBAAsB,CAAC,aAAa,EAAE,KAAK,EAAE,mBAAmB,CAAC;EACzF,MAAMiB,YAAY,GAAGjB,sBAAsB,CAAC,SAAS,EAAE,KAAK,EAAE,qBAAqB,CAAC;EACpF,MAAMkB,SAAS,GAAGlB,sBAAsB,CAAC,MAAM,EAAE,KAAK,CAAC;EACvD,MAAMmB,IAAI,GAAG/C,uBAAuB,CAClC;IACEK,KAAK,EAAEiC,UAAU;IACjBnC,KAAK,EAAEoC,UAAU;IACjBrC,OAAO,EAAEsC,YAAY;IACrBpC,KAAK,EAAEqC,UAAU;IACjBnC,KAAK,EAAEqC,UAAU;IACjBpC,UAAU,EAAEmC,eAAe;IAC3BlC,UAAU,EAAEoC,eAAe;IAC3BnC,OAAO,EAAEoC,YAAY;IACrBnC,IAAI,EAAEoC;GACP,EACD;IACEE,YAAY,EAAE,SAAS;IACvB5B,cAAc;IACdM;GACD,CACF;EAED,OAAOqB,IAAI;AACb;AAEA,SAASpC,gBAAgB,EAAEV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}