{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useState } from \"react\";\nvar useTest = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n    console.log(\"hook: \", token);\n    yield AsyncStorage.getItem(\"accessToken\").then(function (value) {\n      console.log(value);\n      setToken(value);\n    });\n    return {\n      token: token\n    };\n  });\n  return function useTest() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default useTest;","map":{"version":3,"names":["useState","useTest","_ref","_asyncToGenerator","_useState","_useState2","_slicedToArray","token","setToken","console","log","AsyncStorage","getItem","then","value","apply","arguments"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/hooks/useTest.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useTest = async () => {\r\n  const [token, setToken] = useState(null);\r\n  console.log(\"hook: \", token);\r\n  await AsyncStorage.getItem(\"accessToken\").then((value) => {\r\n    console.log(value);\r\n    setToken(value);\r\n  });\r\n\r\n  return { token };\r\n};\r\n\r\nexport default useTest;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,IAAMC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC1B,IAAAC,SAAA,GAA0BJ,QAAQ,CAAC,IAAI,CAAC;MAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;MAAjCG,KAAK,GAAAF,UAAA;MAAEG,QAAQ,GAAAH,UAAA;IACtBI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,KAAK,CAAC;IAC5B,MAAMI,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAACC,IAAI,CAAC,UAACC,KAAK,EAAK;MACxDL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClBN,QAAQ,CAACM,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO;MAAEP,KAAK,EAALA;IAAM,CAAC;EAClB,CAAC;EAAA,gBATKN,OAAOA,CAAA;IAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GASZ;AAED,eAAef,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}