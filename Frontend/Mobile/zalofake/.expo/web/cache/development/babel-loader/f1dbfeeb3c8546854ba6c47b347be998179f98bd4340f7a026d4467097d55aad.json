{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nconst MenuItem = _ref => {\n  let {\n    leadingIcon,\n    trailingIcon,\n    dense,\n    title,\n    disabled,\n    background,\n    onPress,\n    style,\n    contentStyle,\n    titleStyle,\n    rippleColor: customRippleColor,\n    testID = 'menu-item',\n    accessibilityLabel,\n    accessibilityState,\n    theme: themeOverrides,\n    titleMaxFontSizeMultiplier = 1.5\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    titleColor,\n    iconColor,\n    rippleColor\n  } = getMenuItemColor({\n    theme,\n    disabled,\n    customRippleColor\n  });\n  const {\n    isV3\n  } = theme;\n  const containerPadding = isV3 ? 12 : 8;\n  const iconWidth = isV3 ? 24 : 40;\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon\n  });\n  const titleTextStyle = _objectSpread({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n  const newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled\n  });\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    background: background,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: newAccessibilityState,\n    rippleColor: rippleColor\n  }, React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth,\n      maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: `${testID}-title`,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle],\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }, title)), isV3 && trailingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default MenuItem;","map":{"version":3,"names":["React","StyleSheet","View","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","useInternalTheme","Icon","TouchableRipple","Text","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","background","onPress","style","contentStyle","titleStyle","rippleColor","customRippleColor","testID","accessibilityLabel","accessibilityState","theme","themeOverrides","titleMaxFontSizeMultiplier","titleColor","iconColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","_objectSpread","color","fonts","bodyLarge","newAccessibilityState","createElement","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\Menu\\MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityState?: AccessibilityState;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  background,\n  onPress,\n  style,\n  contentStyle,\n  titleStyle,\n  rippleColor: customRippleColor,\n  testID = 'menu-item',\n  accessibilityLabel,\n  accessibilityState,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier = 1.5,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { titleColor, iconColor, rippleColor } = getMenuItemColor({\n    theme,\n    disabled,\n    customRippleColor,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      background={background}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={newAccessibilityState}\n      rippleColor={rippleColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-title`}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n            maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default MenuItem;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAa9B,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,SAAS,EACTC,SAAS,QACJ,SAAS;AAChB,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,IAAI,MAAsB,SAAS;AAC1C,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,IAAI,MAAM,oBAAoB;AA4FrC,MAAMC,QAAQ,GAAGC,IAAA,IAiBJ;EAAA,IAjBK;IAChBC,WAAW;IACXC,YAAY;IACZC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,OAAO;IACPC,KAAK;IACLC,YAAY;IACZC,UAAU;IACVC,WAAW,EAAEC,iBAAiB;IAC9BC,MAAM,GAAG,WAAW;IACpBC,kBAAkB;IAClBC,kBAAkB;IAClBC,KAAK,EAAEC,cAAc;IACrBC,0BAA0B,GAAG;EACxB,CAAC,GAAAlB,IAAA;EACN,MAAMgB,KAAK,GAAGrB,gBAAgB,CAACsB,cAAc,CAAC;EAC9C,MAAM;IAAEE,UAAU;IAAEC,SAAS;IAAET;EAAY,CAAC,GAAGnB,gBAAgB,CAAC;IAC9DwB,KAAK;IACLX,QAAQ;IACRO;EACF,CAAC,CAAC;EACF,MAAM;IAAES;EAAK,CAAC,GAAGL,KAAK;EAEtB,MAAMM,gBAAgB,GAAGD,IAAI,GAAG,EAAE,GAAG,CAAC;EAEtC,MAAME,SAAS,GAAGF,IAAI,GAAG,EAAE,GAAG,EAAE;EAEhC,MAAMG,QAAQ,GAAG9B,SAAS,IAAI2B,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAE7C,MAAMI,QAAQ,GAAGlC,kBAAkB,CAAC;IAClC8B,IAAI;IACJE,SAAS;IACTtB,WAAW;IACXC;EACF,CAAC,CAAC;EAEF,MAAMwB,cAAc,GAAAC,aAAA;IAClBC,KAAK,EAAET;EAAU,GACbE,IAAI,GAAGL,KAAK,CAACa,KAAK,CAACC,SAAS,GAAG,CAAC,CAAC,CACtC;EAED,MAAMC,qBAAqB,GAAAJ,aAAA,CAAAA,aAAA,KAAQZ,kBAAkB;IAAEV;EAAA,EAAU;EAEjE,OACEjB,KAAA,CAAA4C,aAAA,CAACnC,eAAe;IACdW,KAAK,EAAE,CACLyB,MAAM,CAACC,SAAS,EAChB;MAAEC,iBAAiB,EAAEb;IAAiB,CAAC,EACvCnB,KAAK,IAAI8B,MAAM,CAACG,iBAAiB,EACjC5B,KAAK,CACL;IACFD,OAAO,EAAEA,OAAQ;IACjBF,QAAQ,EAAEA,QAAS;IACnBQ,MAAM,EAAEA,MAAO;IACfP,UAAU,EAAEA,UAAW;IACvBQ,kBAAkB,EAAEA,kBAAmB;IACvCuB,iBAAiB,EAAC,UAAU;IAC5BtB,kBAAkB,EAAEgB,qBAAsB;IAC1CpB,WAAW,EAAEA;EAAY,GAEzBvB,KAAA,CAAA4C,aAAA,CAAC1C,IAAI;IAACkB,KAAK,EAAEyB,MAAM,CAACK;EAAI,GACrBrC,WAAW,GACVb,KAAA,CAAA4C,aAAA,CAAC1C,IAAI;IACHkB,KAAK,EAAE,CAAC,CAACa,IAAI,IAAIY,MAAM,CAACM,IAAI,EAAE;MAAEC,KAAK,EAAEjB;IAAU,CAAC,CAAE;IACpDkB,aAAa,EAAC;EAAU,GAExBrD,KAAA,CAAA4C,aAAA,CAACpC,IAAI;IAAC8C,MAAM,EAAEzC,WAAY;IAAC0C,IAAI,EAAE,EAAG;IAACf,KAAK,EAAER;EAAU,CAAE,CACpD,CAAC,GACL,IAAI,EACRhC,KAAA,CAAA4C,aAAA,CAAC1C,IAAI;IACHkB,KAAK,EAAE,CACL,CAACa,IAAI,IAAIY,MAAM,CAACM,IAAI,EACpBN,MAAM,CAACW,OAAO,EACd;MAAEpB,QAAQ;MAAEC;IAAS,CAAC,EACtBJ,IAAI,KACDpB,WAAW,GACRgC,MAAM,CAACY,cAAc,GACrBZ,MAAM,CAACa,qBAAqB,CAAC,EACnCrC,YAAY,CACZ;IACFgC,aAAa,EAAC;EAAM,GAEpBrD,KAAA,CAAA4C,aAAA,CAAClC,IAAI;IACHiD,OAAO,EAAC,WAAW;IACnBC,UAAU,EAAE,KAAM;IAClBC,aAAa,EAAE,CAAE;IACjBpC,MAAM,EAAG,GAAEA,MAAO,QAAQ;IAC1BL,KAAK,EAAE,CAAC,CAACa,IAAI,IAAIY,MAAM,CAAC7B,KAAK,EAAEsB,cAAc,EAAEhB,UAAU,CAAE;IAC3DwC,qBAAqB,EAAEhC;EAA2B,GAEjDd,KACG,CACF,CAAC,EACNiB,IAAI,IAAInB,YAAY,GACnBd,KAAA,CAAA4C,aAAA,CAAC1C,IAAI;IACHkB,KAAK,EAAE,CAAC,CAACa,IAAI,IAAIY,MAAM,CAACM,IAAI,EAAE;MAAEC,KAAK,EAAEjB;IAAU,CAAC,CAAE;IACpDkB,aAAa,EAAC;EAAU,GAExBrD,KAAA,CAAA4C,aAAA,CAACpC,IAAI;IAAC8C,MAAM,EAAExC,YAAa;IAACyC,IAAI,EAAE,EAAG;IAACf,KAAK,EAAER;EAAU,CAAE,CACrD,CAAC,GACL,IACA,CACS,CAAC;AAEtB,CAAC;AAEDrB,QAAQ,CAACoD,WAAW,GAAG,WAAW;AAElC,MAAMlB,MAAM,GAAG5C,UAAU,CAAC+D,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTV,QAAQ,EAAE9B,SAAS;IACnB+B,QAAQ,EAAEhC,SAAS;IACnB4D,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB,CAAC;EACDlB,iBAAiB,EAAE;IACjBiB,MAAM,EAAE;EACV,CAAC;EACDf,GAAG,EAAE;IACHiB,aAAa,EAAE;EACjB,CAAC;EACDnD,KAAK,EAAE;IACLoD,QAAQ,EAAE;EACZ,CAAC;EACDjB,IAAI,EAAE;IACJkB,gBAAgB,EAAE;EACpB,CAAC;EACDb,OAAO,EAAE;IACPU,cAAc,EAAE;EAClB,CAAC;EACDT,cAAc,EAAE;IACda,UAAU,EAAE;EACd,CAAC;EACDZ,qBAAqB,EAAE;IACrBY,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe3D,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}