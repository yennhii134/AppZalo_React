{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nexport default {\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false\n  }) {\n    if (!Platform.isDOMAvailable) {\n      return {\n        canceled: true,\n        assets: null\n      };\n    }\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n    input.setAttribute('id', String(Math.random()));\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n    document.body.appendChild(input);\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', async () => {\n        if (input.files) {\n          const results = [];\n          for (let i = 0; i < input.files.length; i++) {\n            results.push(readFileAsync(input.files[i]));\n          }\n          try {\n            const assets = await Promise.all(results);\n            resolve({\n              canceled: false,\n              assets,\n              output: input.files\n            });\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          resolve({\n            canceled: true,\n            assets: null\n          });\n        }\n        document.body.removeChild(input);\n      });\n      input.addEventListener('cancel', () => {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      });\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  }\n};\nfunction readFileAsync(targetFile) {\n  return new Promise((resolve, reject) => {\n    const mimeType = targetFile.type;\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({\n      target\n    }) => {\n      const uri = target.result;\n      resolve({\n        uri,\n        mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile\n      });\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"names":["Platform","getDocumentAsync","type","multiple","isDOMAvailable","canceled","assets","input","document","createElement","style","display","setAttribute","Array","isArray","join","String","Math","random","body","appendChild","Promise","resolve","reject","addEventListener","files","results","i","length","push","readFileAsync","all","output","e","removeChild","event","MouseEvent","dispatchEvent","targetFile","mimeType","reader","FileReader","onerror","Error","onload","target","uri","result","name","lastModified","size","file","readAsDataURL"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\expo-document-picker\\src\\ExpoDocumentPicker.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { DocumentPickerAsset, DocumentPickerOptions, DocumentPickerResult } from './types';\n\nexport default {\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentPickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n    input.setAttribute('id', String(Math.random()));\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n\n    document.body.appendChild(input);\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', async () => {\n        if (input.files) {\n          const results: Promise<DocumentPickerAsset>[] = [];\n          for (let i = 0; i < input.files.length; i++) {\n            results.push(readFileAsync(input.files[i]));\n          }\n          try {\n            const assets = await Promise.all(results);\n            resolve({ canceled: false, assets, output: input.files });\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          resolve({ canceled: true, assets: null });\n        }\n\n        document.body.removeChild(input);\n      });\n\n      input.addEventListener('cancel', () => {\n        resolve({ canceled: true, assets: null });\n      });\n\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  },\n};\n\nfunction readFileAsync(targetFile: File): Promise<DocumentPickerAsset> {\n  return new Promise((resolve, reject) => {\n    const mimeType = targetFile.type;\n\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      resolve({\n        uri,\n        mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile,\n      });\n    };\n\n    // Read in the image file as a binary string.\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}