{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState } from \"react\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\nvar CountryDropdown = function CountryDropdown() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCountry = _useState2[0],\n    setSelectedCountry = _useState2[1];\n  return _jsx(View, {\n    children: _jsx(SelectDropdown, {\n      data: countries,\n      onSelect: function onSelect(selectedItem, index) {\n        setSelectedCountry(selectedItem);\n      },\n      buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n        return selectedItem;\n      },\n      rowTextForSelection: function rowTextForSelection(item, index) {\n        return item;\n      },\n      buttonStyle: {\n        width: 70,\n        backgroundColor: \"white\"\n      },\n      renderCustomizedButtonChild: function renderCustomizedButtonChild(selectedItem, index) {\n        return _jsxs(View, {\n          style: {\n            justifyContent: \"space-around\",\n            alignItems: 'center',\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            children: selectedCountry\n          }), _jsx(AntDesign, {\n            name: \"caretdown\",\n            size: 10,\n            color: \"gray\"\n          })]\n        });\n      }\n    })\n  });\n};\nexport default CountryDropdown;","map":{"version":3,"names":["React","useState","SelectDropdown","AntDesign","jsx","_jsx","jsxs","_jsxs","countries","CountryDropdown","_useState","_useState2","_slicedToArray","selectedCountry","setSelectedCountry","View","children","data","onSelect","selectedItem","index","buttonTextAfterSelection","rowTextForSelection","item","buttonStyle","width","backgroundColor","renderCustomizedButtonChild","style","justifyContent","alignItems","flexDirection","Text","name","size","color"],"sources":["D:/HK2_Nam4/CNM/BTL/New 2/AppZalo_CNM/Frontend/Mobile/zalofake/src/components/LoginComponents/CountryDropdown.js"],"sourcesContent":["import { View, Text } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\nimport {AntDesign} from '@expo/vector-icons'\r\n\r\nconst countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\r\n\r\nconst CountryDropdown = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n\r\n  return (\r\n    <View >\r\n      <SelectDropdown\r\n        data={countries}\r\n        onSelect={(selectedItem, index) => {\r\n          setSelectedCountry(selectedItem);\r\n        }}\r\n        buttonTextAfterSelection={(selectedItem, index) => {\r\n          return selectedItem;\r\n        }}\r\n        rowTextForSelection={(item, index) => {\r\n          return item;\r\n        }}\r\n        buttonStyle={{ width: 70, backgroundColor: \"white\"}}\r\n        renderCustomizedButtonChild={(selectedItem, index) => {\r\n          return (\r\n            <View style={{justifyContent: \"space-around\", alignItems : 'center', flexDirection: \"row\"}}>\r\n              <Text>{selectedCountry}</Text>\r\n              <AntDesign name=\"caretdown\" size={10} color=\"gray\" />\r\n\r\n            </View>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CountryDropdown;\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAAQC,SAAS,QAAO,oBAAoB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AAE5C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAA8CT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,OACEN,IAAA,CAACU,IAAI;IAAAC,QAAA,EACHX,IAAA,CAACH,cAAc;MACbe,IAAI,EAAET,SAAU;MAChBU,QAAQ,EAAE,SAAAA,SAACC,YAAY,EAAEC,KAAK,EAAK;QACjCN,kBAAkB,CAACK,YAAY,CAAC;MAClC,CAAE;MACFE,wBAAwB,EAAE,SAAAA,yBAACF,YAAY,EAAEC,KAAK,EAAK;QACjD,OAAOD,YAAY;MACrB,CAAE;MACFG,mBAAmB,EAAE,SAAAA,oBAACC,IAAI,EAAEH,KAAK,EAAK;QACpC,OAAOG,IAAI;MACb,CAAE;MACFC,WAAW,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAO,CAAE;MACpDC,2BAA2B,EAAE,SAAAA,4BAACR,YAAY,EAAEC,KAAK,EAAK;QACpD,OACEb,KAAA,CAACQ,IAAI;UAACa,KAAK,EAAE;YAACC,cAAc,EAAE,cAAc;YAAEC,UAAU,EAAG,QAAQ;YAAEC,aAAa,EAAE;UAAK,CAAE;UAAAf,QAAA,GACzFX,IAAA,CAAC2B,IAAI;YAAAhB,QAAA,EAAEH;UAAe,CAAO,CAAC,EAC9BR,IAAA,CAACF,SAAS;YAAC8B,IAAI,EAAC,WAAW;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAM,CAAE,CAAC;QAAA,CAEjD,CAAC;MAEX;IAAE,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAe1B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}