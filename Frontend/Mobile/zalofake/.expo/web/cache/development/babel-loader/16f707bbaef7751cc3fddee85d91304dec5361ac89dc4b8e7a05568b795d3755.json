{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nconst _excluded = [\"enabled\", \"onValueChange\", \"selectedValue\", \"itemStyle\", \"mode\", \"prompt\", \"dropdownIconColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport unstable_createElement from \"react-native-web/dist/exports/createElement\";\nimport { forwardRef } from 'react';\nimport PickerItem from './PickerItem';\nconst Select = forwardRef((props, forwardedRef) => unstable_createElement('select', _objectSpread(_objectSpread({}, props), {}, {\n  ref: forwardedRef\n})));\nconst Picker = forwardRef((props, forwardedRef) => {\n  const {\n      enabled,\n      onValueChange,\n      selectedValue,\n      itemStyle,\n      mode,\n      prompt,\n      dropdownIconColor\n    } = props,\n    other = _objectWithoutProperties(props, _excluded);\n  const handleChange = React.useCallback(e => {\n    const {\n      selectedIndex,\n      value\n    } = e.target;\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }, [onValueChange]);\n  return React.createElement(Select, _extends({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: forwardedRef,\n    value: selectedValue\n  }, other));\n});\nPicker.Item = PickerItem;\nexport default Picker;","map":{"version":3,"names":["React","unstable_createElement","forwardRef","PickerItem","Select","props","forwardedRef","_objectSpread","ref","Picker","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","dropdownIconColor","other","_objectWithoutProperties","_excluded","handleChange","useCallback","e","selectedIndex","value","target","createElement","_extends","disabled","undefined","onChange","Item"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\@react-native-picker\\picker\\js\\Picker.web.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n *\n */\n\nimport * as React from 'react';\nimport {unstable_createElement} from 'react-native-web';\nimport {forwardRef} from 'react';\nimport type {ViewProps} from 'react-native-web/src/exports/View/types';\nimport type {GenericStyleProp} from 'react-native-web/src/types';\nimport type {TextStyle} from 'react-native-web/src/exports/Text/types';\nimport PickerItem from './PickerItem';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  /**\n   * dropdownIconColor\n   * Not used for Web.\n   */\n  dropdownIconColor?: string,\n  /* compat */\n  itemStyle?: GenericStyleProp<TextStyle>,\n  mode?: string,\n  prompt?: string,\n};\n\nconst Select = forwardRef((props: $FlowFixMe, forwardedRef: $FlowFixMe) =>\n  unstable_createElement('select', {\n    ...props,\n    ref: forwardedRef,\n  }),\n);\n\nconst Picker: React$AbstractComponent<PickerProps, empty> = forwardRef<\n  PickerProps,\n  $FlowFixMe,\n>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    itemStyle,\n    mode,\n    prompt,\n    dropdownIconColor,\n    ...other\n  } = props;\n\n  const handleChange = React.useCallback<any>(\n    (e: Object) => {\n      const {selectedIndex, value} = e.target;\n      if (onValueChange) {\n        onValueChange(value, selectedIndex);\n      }\n    },\n    [onValueChange],\n  );\n\n  return (\n    // $FlowFixMe\n    <Select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={forwardedRef}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nexport default Picker;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAOA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,sBAAA;AAE9B,SAAQC,UAAU,QAAO,OAAO;AAIhC,OAAOC,UAAU,MAAM,cAAc;AAmBrC,MAAMC,MAAM,GAAGF,UAAU,CAAC,CAACG,KAAiB,EAAEC,YAAwB,KACpEL,sBAAsB,CAAC,QAAQ,EAAAM,aAAA,CAAAA,aAAA,KAC1BF,KAAK;EACRG,GAAG,EAAEF;AAAA,EACN,CACH,CAAC;AAED,MAAMG,MAAmD,GAAGP,UAAU,CAGpE,CAACG,KAAK,EAAEC,YAAY,KAAK;EACzB,MAAM;MACJI,OAAO;MACPC,aAAa;MACbC,aAAa;MACbC,SAAS;MACTC,IAAI;MACJC,MAAM;MACNC;IAEF,CAAC,GAAGX,KAAK;IADJY,KAAA,GAAAC,wBAAA,CACDb,KAAK,EAAAc,SAAA;EAET,MAAMC,YAAY,GAAGpB,KAAK,CAACqB,WAAW,CACnCC,CAAS,IAAK;IACb,MAAM;MAACC,aAAa;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IACvC,IAAId,aAAa,EAAE;MACjBA,aAAa,CAACa,KAAK,EAAED,aAAa,CAAC;IACrC;EACF,CAAC,EACD,CAACZ,aAAa,CAChB,CAAC;EAED,OAEEX,KAAA,CAAA0B,aAAA,CAACtB,MAAM,EAAAuB,QAAA;IACLC,QAAQ,EAAElB,OAAO,KAAK,KAAK,GAAG,IAAI,GAAGmB,SAAU;IAC/CC,QAAQ,EAAEV,YAAa;IACvBZ,GAAG,EAAEF,YAAa;IAClBkB,KAAK,EAAEZ;EAAc,GACjBK,KAAK,CACV;AAEL,CAAC,CAAC;AAGFR,MAAM,CAACsB,IAAI,GAAG5B,UAAU;AAExB,eAAeM,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}