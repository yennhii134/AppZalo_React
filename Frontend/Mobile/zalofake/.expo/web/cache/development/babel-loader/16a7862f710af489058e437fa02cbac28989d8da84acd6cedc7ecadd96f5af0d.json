{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\nvar CountryDropdown = function CountryDropdown() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCountry = _useState2[0],\n    setSelectedCountry = _useState2[1];\n  return _jsx(View, {\n    style: {\n      position: 'relative',\n      width: 50\n    },\n    children: _jsx(Picker, {\n      selectedValue: selectedCountry,\n      onValueChange: function onValueChange(itemValue) {\n        return setSelectedCountry(itemValue);\n      },\n      style: {\n        height: 50,\n        width: 150\n      },\n      children: countries.map(function (country, index) {\n        return _jsx(Picker.Item, {\n          label: country,\n          value: country\n        }, index);\n      })\n    })\n  });\n};\nexport default CountryDropdown;","map":{"version":3,"names":["React","useState","jsx","_jsx","countries","CountryDropdown","_useState","_useState2","_slicedToArray","selectedCountry","setSelectedCountry","View","style","position","width","children","Picker","selectedValue","onValueChange","itemValue","height","map","country","index","Item","label","value"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/components/LoginComponents/CountryDropdown.js"],"sourcesContent":["import { View, Text, Pressable, Image, TextInput, Picker } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\r\n\r\nconst CountryDropdown = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n\r\n  return (\r\n    <View style={{position:'relative', width: 50}}>\r\n      <Picker\r\n        selectedValue={selectedCountry}\r\n        onValueChange={(itemValue) => setSelectedCountry(itemValue)}\r\n        style={{ height: 50, width: 150 }}\r\n      >\r\n        {countries.map((country, index) => (\r\n          <Picker.Item key={index} label={country} value={country} />\r\n        ))}\r\n      </Picker>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CountryDropdown;\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAExC,IAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AAE5C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAA8CL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,OACEJ,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAE;MAACC,QAAQ,EAAC,UAAU;MAAEC,KAAK,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC5CZ,IAAA,CAACa,MAAM;MACLC,aAAa,EAAER,eAAgB;MAC/BS,aAAa,EAAE,SAAAA,cAACC,SAAS;QAAA,OAAKT,kBAAkB,CAACS,SAAS,CAAC;MAAA,CAAC;MAC5DP,KAAK,EAAE;QAAEQ,MAAM,EAAE,EAAE;QAAEN,KAAK,EAAE;MAAI,CAAE;MAAAC,QAAA,EAEjCX,SAAS,CAACiB,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;QAAA,OAC5BpB,IAAA,CAACa,MAAM,CAACQ,IAAI;UAAaC,KAAK,EAAEH,OAAQ;UAACI,KAAK,EAAEJ;QAAQ,GAAtCC,KAAwC,CAAC;MAAA,CAC5D;IAAC,CACI;EAAC,CACL,CAAC;AAEX,CAAC;AAED,eAAelB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}