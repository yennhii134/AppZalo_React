{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport Card from '../Card/Card';\nimport Text from '../Typography/Text';\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\nconst FABGroup = _ref => {\n  let {\n    actions,\n    icon,\n    open,\n    onPress,\n    onLongPress,\n    toggleStackOnLongPress,\n    accessibilityLabel,\n    theme: themeOverrides,\n    style,\n    fabStyle,\n    visible,\n    label,\n    testID,\n    onStateChange,\n    color: colorProp,\n    delayLongPress = 200,\n    variant = 'primary',\n    enableLongPressWhenStackOpened = false,\n    backdropColor: customBackdropColor,\n    rippleColor\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    current: backdrop\n  } = React.useRef(new Animated.Value(0));\n  const animations = React.useRef(actions.map(() => new Animated.Value(open ? 1 : 0)));\n  const [prevActions, setPrevActions] = React.useState(null);\n  const {\n    scale\n  } = theme.animation;\n  const {\n    isV3\n  } = theme;\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(animation => Animated.timing(animation, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      })).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }), ...animations.current.map(animation => Animated.timing(animation, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }))]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n  const close = () => onStateChange({\n    open: false\n  });\n  const toggle = () => onStateChange({\n    open: !open\n  });\n  const {\n    labelColor,\n    backdropColor,\n    stackedFABBackgroundColor\n  } = getFABGroupColors({\n    theme,\n    customBackdropColor\n  });\n  const backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  const opacities = animations.current;\n  const scales = opacities.map(opacity => open ? opacity.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.5, 1]\n  }) : 1);\n  const translations = opacities.map(opacity => open ? opacity.interpolate({\n    inputRange: [0, 1],\n    outputRange: [24, -8]\n  }) : -8);\n  const labelTranslations = opacities.map(opacity => open ? opacity.interpolate({\n    inputRange: [0, 1],\n    outputRange: [8, -8]\n  }) : -8);\n  const {\n    top,\n    bottom,\n    right,\n    left\n  } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map((_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0));\n    setPrevActions(actions);\n  }\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(AnimatedPressable, {\n    accessibilityRole: \"button\",\n    onPress: close,\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  }), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map((it, i) => {\n    const labelTextStyle = _objectSpread({\n      color: it.labelTextColor ?? labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n    const marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    const accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    const size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none',\n      accessibilityRole: \"button\",\n      importantForAccessibility: \"yes\",\n      accessible: true,\n      accessibilityLabel: accessibilityLabel\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      mode: isV3 ? 'contained' : 'elevated',\n      onPress: e => {\n        it.onPress(e);\n        close();\n      },\n      accessibilityHint: it.accessibilityHint,\n      importantForAccessibility: \"no-hide-descendants\",\n      accessibilityElementsHidden: true,\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle]\n    }, React.createElement(Text, {\n      variant: \"titleMedium\",\n      importantForAccessibility: \"no-hide-descendants\",\n      accessibilityElementsHidden: true,\n      style: [labelTextStyle, it.labelStyle],\n      maxFontSizeMultiplier: it.labelMaxFontSizeMultiplier\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      accessibilityElementsHidden: true,\n      theme: theme,\n      onPress: e => {\n        it.onPress(e);\n        close();\n      },\n      importantForAccessibility: \"no-hide-descendants\",\n      testID: it.testID,\n      visible: open,\n      rippleColor: it.rippleColor\n    }));\n  })), React.createElement(FAB, {\n    onPress: e => {\n      onPress === null || onPress === void 0 ? void 0 : onPress(e);\n      if (!toggleStackOnLongPress || open) {\n        toggle();\n      }\n    },\n    onLongPress: e => {\n      if (!open || enableLongPressWhenStackOpened) {\n        onLongPress === null || onLongPress === void 0 ? void 0 : onLongPress(e);\n        if (toggleStackOnLongPress) {\n          toggle();\n        }\n      }\n    },\n    delayLongPress: delayLongPress,\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    theme: theme,\n    visible: visible,\n    label: label,\n    testID: testID,\n    variant: variant,\n    rippleColor: rippleColor\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nexport default FABGroup;\nexport { FABGroup };\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"names":["React","Animated","Pressable","StyleSheet","View","useSafeAreaInsets","FAB","getFABGroupColors","useInternalTheme","Card","Text","AnimatedPressable","createAnimatedComponent","FABGroup","_ref","actions","icon","open","onPress","onLongPress","toggleStackOnLongPress","accessibilityLabel","theme","themeOverrides","style","fabStyle","visible","label","testID","onStateChange","color","colorProp","delayLongPress","variant","enableLongPressWhenStackOpened","backdropColor","customBackdropColor","rippleColor","current","backdrop","useRef","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","createElement","pointerEvents","styles","container","accessibilityRole","backgroundColor","safeArea","it","labelTextStyle","_objectSpread","labelTextColor","fonts","titleMedium","marginHorizontal","size","key","item","importantForAccessibility","accessible","mode","e","accessibilityHint","accessibilityElementsHidden","containerStyle","transform","translateY","v3ContainerStyle","labelStyle","maxFontSizeMultiplier","labelMaxFontSizeMultiplier","accessibilityState","expanded","fab","displayName","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\FAB\\FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `labelMaxFontSizeMultiplier`: specifies the largest possible scale a title font can reach.\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `onLongPress`: callback that is called when `FAB` is long pressed\n   * - `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   * - `rippleColor`: color of the ripple effect.\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    containerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    labelStyle?: StyleProp<TextStyle>;\n    labelMaxFontSizeMultiplier?: number;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n    rippleColor?: ColorValue;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long pressing the `FAB`.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Makes actions stack appear on long press instead of on press.\n   */\n  toggleStackOnLongPress?: boolean;\n  /**\n   * Changes the delay for long press reaction.\n   */\n  delayLongPress?: number;\n  /**\n   * Allows for onLongPress when stack is opened.\n   */\n  enableLongPressWhenStackOpened?: boolean;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  onLongPress,\n  toggleStackOnLongPress,\n  accessibilityLabel,\n  theme: themeOverrides,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  delayLongPress = 200,\n  variant = 'primary',\n  enableLongPressWhenStackOpened = false,\n  backdropColor: customBackdropColor,\n  rippleColor,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <AnimatedPressable\n        accessibilityRole=\"button\"\n        onPress={close}\n        pointerEvents={open ? 'auto' : 'none'}\n        style={[\n          styles.backdrop,\n          {\n            opacity: backdropOpacity,\n            backgroundColor: backdropColor,\n          },\n        ]}\n      />\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n                accessibilityRole=\"button\"\n                importantForAccessibility=\"yes\"\n                accessible={true}\n                accessibilityLabel={accessibilityLabel}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityHint={it.accessibilityHint}\n                      importantForAccessibility=\"no-hide-descendants\"\n                      accessibilityElementsHidden={true}\n                      style={[\n                        styles.containerStyle,\n                        {\n                          transform: [\n                            isV3\n                              ? { translateY: labelTranslations[i] }\n                              : { scale: scales[i] },\n                          ],\n                          opacity: opacities[i],\n                        },\n                        isV3 && styles.v3ContainerStyle,\n                        it.containerStyle,\n                      ]}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        importantForAccessibility=\"no-hide-descendants\"\n                        accessibilityElementsHidden={true}\n                        style={[labelTextStyle, it.labelStyle]}\n                        maxFontSizeMultiplier={it.labelMaxFontSizeMultiplier}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={[\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: stackedFABBackgroundColor,\n                    },\n                    isV3 && { transform: [{ translateY: translations[i] }] },\n                    it.style,\n                  ]}\n                  accessibilityElementsHidden={true}\n                  theme={theme}\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  importantForAccessibility=\"no-hide-descendants\"\n                  testID={it.testID}\n                  visible={open}\n                  rippleColor={it.rippleColor}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            if (!toggleStackOnLongPress || open) {\n              toggle();\n            }\n          }}\n          onLongPress={(e) => {\n            if (!open || enableLongPressWhenStackOpened) {\n              onLongPress?.(e);\n              if (toggleStackOnLongPress) {\n                toggle();\n              }\n            }\n          }}\n          delayLongPress={delayLongPress}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          theme={theme}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n          rippleColor={rippleColor}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default FABGroup;\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}