{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nconst overflowLeft = center => {\n  return center < 0;\n};\nconst overflowRight = (center, tooltipWidth) => {\n  const {\n    width: layoutWidth\n  } = Dimensions.get('window');\n  return center + tooltipWidth > layoutWidth;\n};\nconst overflowBottom = (childrenY, childrenHeight, tooltipHeight) => {\n  const {\n    height: layoutHeight\n  } = Dimensions.get('window');\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\n};\nconst getTooltipXPosition = (_ref, _ref2) => {\n  let {\n    pageX: childrenX,\n    width: childrenWidth\n  } = _ref;\n  let {\n    width: tooltipWidth\n  } = _ref2;\n  const center = childrenWidth > 0 ? childrenX + (childrenWidth - tooltipWidth) / 2 : childrenX;\n  if (overflowLeft(center)) return childrenX;\n  if (overflowRight(center, tooltipWidth)) return childrenX + childrenWidth - tooltipWidth;\n  return center;\n};\nconst getTooltipYPosition = (_ref3, _ref4) => {\n  let {\n    pageY: childrenY,\n    height: childrenHeight\n  } = _ref3;\n  let {\n    height: tooltipHeight\n  } = _ref4;\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight)) return childrenY - tooltipHeight;\n  return childrenY + childrenHeight;\n};\nconst getChildrenMeasures = (style, measures) => {\n  const {\n    position,\n    top,\n    bottom,\n    left,\n    right\n  } = Array.isArray(style) ? style.reduce((acc, current) => _objectSpread(_objectSpread({}, acc), current)) : style;\n  if (position === 'absolute') {\n    let pageX = 0;\n    let pageY = measures.pageY;\n    let height = 0;\n    let width = 0;\n    if (typeof left === 'number') {\n      pageX = left;\n      width = 0;\n    }\n    if (typeof right === 'number') {\n      pageX = measures.width - right;\n      width = 0;\n    }\n    if (typeof top === 'number') {\n      pageY = pageY + top;\n    }\n    if (typeof bottom === 'number') {\n      pageY = pageY - bottom;\n    }\n    return {\n      pageX,\n      pageY,\n      width,\n      height\n    };\n  }\n  return measures;\n};\nexport const getTooltipPosition = (_ref5, component) => {\n  let {\n    children,\n    tooltip,\n    measured\n  } = _ref5;\n  if (!measured) return {};\n  let measures = children;\n  if (component.props.style) {\n    measures = getChildrenMeasures(component.props.style, children);\n  }\n  return {\n    left: getTooltipXPosition(measures, tooltip),\n    top: getTooltipYPosition(measures, tooltip)\n  };\n};","map":{"version":3,"names":["overflowLeft","center","overflowRight","tooltipWidth","width","layoutWidth","Dimensions","get","overflowBottom","childrenY","childrenHeight","tooltipHeight","height","layoutHeight","getTooltipXPosition","_ref","_ref2","pageX","childrenX","childrenWidth","getTooltipYPosition","_ref3","_ref4","pageY","getChildrenMeasures","style","measures","position","top","bottom","left","right","Array","isArray","reduce","acc","current","_objectSpread","getTooltipPosition","_ref5","component","children","tooltip","measured","props"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\Tooltip\\utils.ts"],"sourcesContent":["import { Dimensions, LayoutRectangle, ViewStyle } from 'react-native';\n\ntype ChildrenMeasurement = {\n  width: number;\n  height: number;\n  pageX: number;\n  pageY: number;\n};\n\ntype TooltipLayout = LayoutRectangle;\n\nexport type Measurement = {\n  children: ChildrenMeasurement;\n  tooltip: TooltipLayout;\n  measured: boolean;\n};\n\n/**\n * Return true when the tooltip center x-coordinate relative to the wrapped element is negative.\n * The tooltip will be placed at the starting x-coordinate from the wrapped element.\n */\nconst overflowLeft = (center: number): boolean => {\n  return center < 0;\n};\n\n/**\n * Return true when the tooltip center x-coordinate + tooltip width is greater than the layout width\n * The tooltip width will grow from right to left relative to the wrapped element.\n */\nconst overflowRight = (center: number, tooltipWidth: number): boolean => {\n  const { width: layoutWidth } = Dimensions.get('window');\n\n  return center + tooltipWidth > layoutWidth;\n};\n\n/**\n * Return true when the children y-coordinate + its height + tooltip height is greater than the layout height.\n * The tooltip will be placed at the top of the wrapped element.\n */\nconst overflowBottom = (\n  childrenY: number,\n  childrenHeight: number,\n  tooltipHeight: number\n): boolean => {\n  const { height: layoutHeight } = Dimensions.get('window');\n\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\n};\n\nconst getTooltipXPosition = (\n  { pageX: childrenX, width: childrenWidth }: ChildrenMeasurement,\n  { width: tooltipWidth }: TooltipLayout\n): number => {\n  // when the children use position absolute the childrenWidth is measured as 0,\n  // so it's best to anchor the tooltip at the start of the children\n  const center =\n    childrenWidth > 0\n      ? childrenX + (childrenWidth - tooltipWidth) / 2\n      : childrenX;\n\n  if (overflowLeft(center)) return childrenX;\n\n  if (overflowRight(center, tooltipWidth))\n    return childrenX + childrenWidth - tooltipWidth;\n\n  return center;\n};\n\nconst getTooltipYPosition = (\n  { pageY: childrenY, height: childrenHeight }: ChildrenMeasurement,\n  { height: tooltipHeight }: TooltipLayout\n): number => {\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight))\n    return childrenY - tooltipHeight;\n\n  return childrenY + childrenHeight;\n};\n\nconst getChildrenMeasures = (\n  style: ViewStyle | Array<ViewStyle>,\n  measures: ChildrenMeasurement\n): ChildrenMeasurement => {\n  const { position, top, bottom, left, right } = Array.isArray(style)\n    ? style.reduce((acc, current) => ({ ...acc, ...current }))\n    : style;\n\n  if (position === 'absolute') {\n    let pageX = 0;\n    let pageY = measures.pageY;\n    let height = 0;\n    let width = 0;\n    if (typeof left === 'number') {\n      pageX = left;\n      width = 0;\n    }\n    if (typeof right === 'number') {\n      pageX = measures.width - right;\n      width = 0;\n    }\n    if (typeof top === 'number') {\n      pageY = pageY + top;\n    }\n    if (typeof bottom === 'number') {\n      pageY = pageY - bottom;\n    }\n\n    return { pageX, pageY, width, height };\n  }\n\n  return measures;\n};\n\nexport const getTooltipPosition = (\n  { children, tooltip, measured }: Measurement,\n  component: React.ReactElement<{\n    style: ViewStyle | Array<ViewStyle> | undefined | null;\n  }>\n): {} | { left: number; top: number } => {\n  if (!measured) return {};\n  let measures = children;\n  if (component.props.style) {\n    measures = getChildrenMeasures(component.props.style, children);\n  }\n\n  return {\n    left: getTooltipXPosition(measures, tooltip),\n    top: getTooltipYPosition(measures, tooltip),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}