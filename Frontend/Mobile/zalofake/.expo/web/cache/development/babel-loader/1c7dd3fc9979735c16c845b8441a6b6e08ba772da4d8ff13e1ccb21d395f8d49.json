{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TurboModuleRegistry } from \"react-native-web/dist/index\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { getInstallationErrorMessage } from \"./installationError\";\nexport var getNativeComponent = function getNativeComponent() {\n  try {\n    switch (Platform.OS) {\n      case 'android':\n      case 'ios':\n        return requireNativeComponent('RNDatePicker');\n      default:\n        throw Error('react-native-date-picker is not supported on this platform');\n    }\n  } catch (e) {\n    if (global.ignoreDatePickerWarning) return null;\n    throw Error(getInstallationErrorMessage());\n  }\n};\nexport var getNativeModule = function getNativeModule() {\n  try {\n    switch (Platform.OS) {\n      case 'ios':\n        return NativeModules.RNDatePicker;\n      case 'android':\n        return TurboModuleRegistry ? TurboModuleRegistry.get('RNDatePicker') : NativeModules.RNDatePicker;\n      default:\n        throw Error('react-native-date-picker is not supported on this platform');\n    }\n  } catch (e) {\n    if (global.ignoreDatePickerWarning) return null;\n    throw Error(getInstallationErrorMessage());\n  }\n};","map":{"version":3,"names":["TurboModuleRegistry","requireNativeComponent","getInstallationErrorMessage","getNativeComponent","Platform","OS","Error","e","global","ignoreDatePickerWarning","getNativeModule","NativeModules","RNDatePicker","get"],"sources":["C:/BaoTruc/iuh/ky2nam4/CNM/DeTai/AppZalo_CNM/Frontend/Mobile/zalofake/node_modules/react-native-date-picker/src/modules.js"],"sourcesContent":["import {\n  NativeModules,\n  Platform,\n  TurboModuleRegistry,\n  requireNativeComponent,\n} from 'react-native'\nimport { getInstallationErrorMessage } from './installationError'\n\nexport const getNativeComponent = () => {\n  try {\n    switch (Platform.OS) {\n      case 'android':\n      case 'ios':\n        return requireNativeComponent('RNDatePicker')\n      default:\n        throw Error(\n          'react-native-date-picker is not supported on this platform'\n        )\n    }\n  } catch (e) {\n    if (global.ignoreDatePickerWarning) return null\n    throw Error(getInstallationErrorMessage())\n  }\n}\n\nexport const getNativeModule = () => {\n  try {\n    switch (Platform.OS) {\n      case 'ios':\n        return NativeModules.RNDatePicker\n      case 'android':\n        return TurboModuleRegistry\n          ? TurboModuleRegistry.get('RNDatePicker')\n          : NativeModules.RNDatePicker\n      default:\n        throw Error(\n          'react-native-date-picker is not supported on this platform'\n        )\n    }\n  } catch (e) {\n    if (global.ignoreDatePickerWarning) return null\n    throw Error(getInstallationErrorMessage())\n  }\n}\n"],"mappings":";;SAGEA,mBAAmB;AAAA,SACnBC,sBAAsB;AAExB,SAASC,2BAA2B;AAEpC,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EACtC,IAAI;IACF,QAAQC,QAAQ,CAACC,EAAE;MACjB,KAAK,SAAS;MACd,KAAK,KAAK;QACR,OAAOJ,sBAAsB,CAAC,cAAc,CAAC;MAC/C;QACE,MAAMK,KAAK,CACT,4DACF,CAAC;IACL;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAIC,MAAM,CAACC,uBAAuB,EAAE,OAAO,IAAI;IAC/C,MAAMH,KAAK,CAACJ,2BAA2B,CAAC,CAAC,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnC,IAAI;IACF,QAAQN,QAAQ,CAACC,EAAE;MACjB,KAAK,KAAK;QACR,OAAOM,aAAa,CAACC,YAAY;MACnC,KAAK,SAAS;QACZ,OAAOZ,mBAAmB,GACtBA,mBAAmB,CAACa,GAAG,CAAC,cAAc,CAAC,GACvCF,aAAa,CAACC,YAAY;MAChC;QACE,MAAMN,KAAK,CACT,4DACF,CAAC;IACL;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAIC,MAAM,CAACC,uBAAuB,EAAE,OAAO,IAAI;IAC/C,MAAMH,KAAK,CAACJ,2BAA2B,CAAC,CAAC,CAAC;EAC5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}