{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axiosInstance from \"../components/configs/axiosInstance\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nvar useLogout = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var _useAuthContext = useAuthContext(),\n      setAuthUser = _useAuthContext.setAuthUser,\n      setAccessToken = _useAuthContext.setAccessToken,\n      setRefreshToken = _useAuthContext.setRefreshToken;\n    try {\n      var refreshToken = JSON.parse(yield AsyncStorage.getItem(\"refreshToken\"));\n      if (refreshToken != null) {\n        console.log(refreshToken);\n        var response = yield axiosInstance.post(\"/auth/logout\", {\n          refreshToken: refreshToken\n        });\n        if (response.status === 200) {\n          yield AsyncStorage.removeItem(\"authUser\");\n          yield AsyncStorage.removeItem(\"accessToken\");\n          yield AsyncStorage.removeItem(\"refreshToken\");\n          setAuthUser(null);\n          setAccessToken(null);\n          setRefreshToken(null);\n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      throw error;\n    }\n  });\n  return function useLogout() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default useLogout;","map":{"version":3,"names":["AsyncStorage","axiosInstance","useAuthContext","useLogout","_ref","_asyncToGenerator","_useAuthContext","setAuthUser","setAccessToken","setRefreshToken","refreshToken","JSON","parse","getItem","console","log","response","post","status","removeItem","error","apply","arguments"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/hooks/useLogout.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axiosInstance from \"../components/configs/axiosInstance\";\r\nimport { useAuthContext } from \"../contexts/AuthContext\";\r\n\r\nconst useLogout = async () => {\r\n  const { setAuthUser, setAccessToken, setRefreshToken } = useAuthContext();\r\n  try {\r\n    const refreshToken = JSON.parse(await AsyncStorage.getItem(\"refreshToken\"));\r\n    if (refreshToken != null) {\r\n      console.log(refreshToken);\r\n      const response = await axiosInstance.post(\"/auth/logout\", {\r\n        refreshToken: refreshToken,\r\n      });\r\n      if (response.status === 200) {\r\n        await AsyncStorage.removeItem(\"authUser\");\r\n        await AsyncStorage.removeItem(\"accessToken\");\r\n        await AsyncStorage.removeItem(\"refreshToken\");\r\n        setAuthUser(null);\r\n        setAccessToken(null);\r\n        setRefreshToken(null);\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default useLogout;\r\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,OAAOC,aAAa;AACpB,SAASC,cAAc;AAEvB,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC5B,IAAAC,eAAA,GAAyDJ,cAAc,CAAC,CAAC;MAAjEK,WAAW,GAAAD,eAAA,CAAXC,WAAW;MAAEC,cAAc,GAAAF,eAAA,CAAdE,cAAc;MAAEC,eAAe,GAAAH,eAAA,CAAfG,eAAe;IACpD,IAAI;MACF,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,OAAOZ,YAAY,CAACa,OAAO,CAAC,cAAc,CAAC,CAAC;MAC3E,IAAIH,YAAY,IAAI,IAAI,EAAE;QACxBI,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;QACzB,IAAMM,QAAQ,SAASf,aAAa,CAACgB,IAAI,CAAC,cAAc,EAAE;UACxDP,YAAY,EAAEA;QAChB,CAAC,CAAC;QACF,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAMlB,YAAY,CAACmB,UAAU,CAAC,UAAU,CAAC;UACzC,MAAMnB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;UAC5C,MAAMnB,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC;UAC7CZ,WAAW,CAAC,IAAI,CAAC;UACjBC,cAAc,CAAC,IAAI,CAAC;UACpBC,eAAe,CAAC,IAAI,CAAC;UAErB,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAxBKjB,SAASA,CAAA;IAAA,OAAAC,IAAA,CAAAiB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAwBd;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}