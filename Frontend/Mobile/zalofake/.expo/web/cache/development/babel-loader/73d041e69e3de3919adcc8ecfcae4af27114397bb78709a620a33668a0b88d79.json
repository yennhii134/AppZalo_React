{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\HK2_Nam4\\\\CNM\\\\BTL\\\\New_3\\\\AppZalo_CNM\\\\Frontend\\\\Mobile\\\\zalofake\\\\src\\\\contexts\\\\AuthContext.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from \"react-native-toast-message\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = createContext();\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\nexport const AuthContextProvider = ({\n  children\n}) => {\n  const [authUser, setAuthUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const AuthUser = await AsyncStorage.getItem(\"authUser\");\n        const AccessToken = await AsyncStorage.getItem(\"accessToken\");\n        const RefreshToken = await AsyncStorage.getItem(\"refreshToken\");\n        if (AuthUser) {\n          setAuthUser(JSON.parse(AuthUser));\n        }\n        if (AccessToken) {\n          setAccessToken(JSON.parse(AccessToken));\n        }\n        if (RefreshToken) {\n          setRefreshToken(JSON.parse(RefreshToken));\n        }\n      } catch (error) {\n        throw new Error(\"Error loading data from AsyncStorage:\", error);\n      }\n    };\n    loadData();\n    reloadAuthUser();\n  }, []);\n  useEffect(() => {\n    const saveData = async () => {\n      try {\n        if (authUser) {\n          await AsyncStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        }\n        if (accessToken) {\n          await AsyncStorage.setItem(\"accessToken\", JSON.stringify(accessToken));\n        }\n        if (refreshToken) {\n          await AsyncStorage.setItem(\"refreshToken\", JSON.stringify(refreshToken));\n        }\n      } catch (error) {\n        throw new Error(\"Error saving data to AsyncStorage:\", error);\n      }\n    };\n    saveData();\n  }, [authUser, accessToken, refreshToken]);\n  const updateAvatar = async (newAvatarUrl, publicId) => {\n    setAuthUser(prevUser => _objectSpread(_objectSpread({}, prevUser), {}, {\n      profile: _objectSpread(_objectSpread({}, prevUser.profile), {}, {\n        avatar: _objectSpread(_objectSpread({}, prevUser.profile.avatar), {}, {\n          url: newAvatarUrl,\n          public_id: publicId\n        })\n      })\n    }));\n  };\n  const updateBia = async (backgroundUrl, publicId) => {\n    setAuthUser(prevUser => _objectSpread(_objectSpread({}, prevUser), {}, {\n      profile: _objectSpread(_objectSpread({}, prevUser.profile), {}, {\n        background: _objectSpread(_objectSpread({}, prevUser.profile.background), {}, {\n          url: backgroundUrl,\n          public_id: publicId\n        })\n      })\n    }));\n  };\n  const reloadAuthUser = async () => {\n    try {\n      const response = await axiosInstance.get(\"users/get/me\");\n      if (response.status === 200) {\n        setAuthUser(response.data.user);\n        return true;\n      }\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      authUser,\n      setAuthUser,\n      accessToken,\n      setAccessToken,\n      refreshToken,\n      setRefreshToken,\n      updateAvatar,\n      updateBia,\n      reloadAuthUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\nexport default AuthContextProvider;","map":{"version":3,"names":["createContext","useContext","useState","useEffect","AsyncStorage","Toast","axiosInstance","jsxDEV","_jsxDEV","AuthContext","useAuthContext","AuthContextProvider","children","authUser","setAuthUser","accessToken","setAccessToken","refreshToken","setRefreshToken","loadData","AuthUser","getItem","AccessToken","RefreshToken","JSON","parse","error","Error","reloadAuthUser","saveData","setItem","stringify","updateAvatar","newAvatarUrl","publicId","prevUser","_objectSpread","profile","avatar","url","public_id","updateBia","backgroundUrl","background","response","get","status","data","user","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/HK2_Nam4/CNM/BTL/New_3/AppZalo_CNM/Frontend/Mobile/zalofake/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport axiosInstance from \"../api/axiosInstance\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuthContext = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// AsyncStorage.clear();\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [authUser, setAuthUser] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const AuthUser = await AsyncStorage.getItem(\"authUser\");\r\n        const AccessToken = await AsyncStorage.getItem(\"accessToken\");\r\n        const RefreshToken = await AsyncStorage.getItem(\"refreshToken\");\r\n        if (AuthUser) {\r\n          setAuthUser(JSON.parse(AuthUser));\r\n        }\r\n        if (AccessToken) {\r\n          setAccessToken(JSON.parse(AccessToken));\r\n        }\r\n        if (RefreshToken) {\r\n          setRefreshToken(JSON.parse(RefreshToken));\r\n        }\r\n      } catch (error) {\r\n        throw new Error(\"Error loading data from AsyncStorage:\", error);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n    reloadAuthUser();\r\n  }, []);\r\n  useEffect(() => {\r\n    const saveData = async () => {\r\n      try {\r\n        if (authUser) {\r\n          await AsyncStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        }\r\n        if (accessToken) {\r\n          // console.log(\"save accessToken\", accessToken);\r\n          await AsyncStorage.setItem(\r\n            \"accessToken\",\r\n            JSON.stringify(accessToken)\r\n          );\r\n        }\r\n        if (refreshToken) {\r\n          await AsyncStorage.setItem(\r\n            \"refreshToken\",\r\n            JSON.stringify(refreshToken)\r\n          );\r\n        }\r\n      } catch (error) {\r\n        throw new Error(\"Error saving data to AsyncStorage:\", error);\r\n      }\r\n    };\r\n\r\n    saveData();\r\n  }, [authUser, accessToken, refreshToken]);\r\n  // Hàm cập nhật avatar mới\r\n  const updateAvatar = async (newAvatarUrl, publicId) => {\r\n    setAuthUser((prevUser) => ({\r\n      ...prevUser,\r\n      profile: {\r\n        ...prevUser.profile,\r\n        avatar: {\r\n          ...prevUser.profile.avatar,\r\n          url: newAvatarUrl,\r\n          public_id: publicId,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n  // Hàm cập nhật bìa mới\r\n  const updateBia = async (backgroundUrl, publicId) => {\r\n    setAuthUser((prevUser) => ({\r\n      ...prevUser,\r\n      profile: {\r\n        ...prevUser.profile,\r\n        background: {\r\n          ...prevUser.profile.background,\r\n          url: backgroundUrl,\r\n          public_id: publicId,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n  const reloadAuthUser = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"users/get/me\");\r\n      if (response.status === 200) {\r\n        setAuthUser(response.data.user);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Toast.error(\"Failed to get user information\");\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        authUser,\r\n        setAuthUser,\r\n        accessToken,\r\n        setAccessToken,\r\n        refreshToken,\r\n        setRefreshToken,\r\n        updateAvatar,\r\n        updateBia,\r\n        reloadAuthUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}