{"ast":null,"code":"import axios from \"axios\";\nimport config from \"./config\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from \"react-native-toast-message\";\nconst axiosInstance = axios.create({\n  baseURL: config.baseURL\n});\naxiosInstance.interceptors.request.use(async config => {\n  try {\n    config.headers[\"User-Agent\"] += \"Mobile\";\n    if (!config.url.includes(\"/auth/login\")) {\n      const accessToken = JSON.parse(await AsyncStorage.getItem(\"accessToken\"));\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      }\n    }\n    return config;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}, error => {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest.url.includes(\"auth/login\")) {\n    try {\n      const refreshToken = JSON.parse(await AsyncStorage.getItem(\"refreshToken\"));\n      const refreshedTokenResponse = await axiosInstance.post(\"/auth/refreshToken\", {\n        refreshToken\n      });\n      const newAccessToken = refreshedTokenResponse.data.newAccessToken;\n      if (!newAccessToken) {\n        showErrorToast(\"Your session has expired. Please login again.\");\n        await AsyncStorage.clear();\n        return Promise.reject(error);\n      } else {\n        await AsyncStorage.setItem(\"accessToken\", JSON.stringify(newAccessToken));\n      }\n      originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n      return axiosInstance(originalRequest);\n    } catch (refreshError) {\n      showErrorToast(\"Your session has expired. Please login again.\");\n      await AsyncStorage.clear();\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nconst showErrorToast = message => {\n  Toast.show({\n    type: \"error\",\n    text1: \"Error\",\n    text2: message,\n    position: \"bottom\",\n    visibilityTime: 4000,\n    autoHide: true\n  });\n};\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","AsyncStorage","Toast","axiosInstance","create","baseURL","interceptors","request","use","headers","url","includes","accessToken","JSON","parse","getItem","Authorization","error","Promise","reject","response","originalRequest","status","refreshToken","refreshedTokenResponse","post","newAccessToken","data","showErrorToast","clear","setItem","stringify","refreshError","message","show","type","text1","text2","position","visibilityTime","autoHide"],"sources":["D:/HK2_Nam4/CNM/BTL/New_3/AppZalo_CNM/Frontend/Mobile/zalofake/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  async (config) => {\r\n    try {\r\n      config.headers[\"User-Agent\"] += \"Mobile\";\r\n\r\n      if (!config.url.includes(\"/auth/login\")) {\r\n        const accessToken = JSON.parse(\r\n          await AsyncStorage.getItem(\"accessToken\")\r\n        );\r\n        if (accessToken) {\r\n          config.headers.Authorization = `Bearer ${accessToken}`;\r\n        }\r\n      }\r\n      return config;\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (\r\n      error.response.status === 401 &&\r\n      !originalRequest.url.includes(\"auth/login\")\r\n    ) {\r\n      try {\r\n        const refreshToken = JSON.parse(\r\n          await AsyncStorage.getItem(\"refreshToken\")\r\n        );\r\n\r\n        const refreshedTokenResponse = await axiosInstance.post(\r\n          \"/auth/refreshToken\",\r\n          {\r\n            refreshToken,\r\n          }\r\n        );\r\n        const newAccessToken = refreshedTokenResponse.data.newAccessToken;\r\n        if (!newAccessToken) {\r\n          showErrorToast(\"Your session has expired. Please login again.\");\r\n          await AsyncStorage.clear();\r\n          return Promise.reject(error);\r\n        } else {\r\n          await AsyncStorage.setItem(\r\n            \"accessToken\",\r\n            JSON.stringify(newAccessToken)\r\n          );\r\n        }\r\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n        return axiosInstance(originalRequest);\r\n      } catch (refreshError) {\r\n        // console.error(\"Refresh token failed:\", refreshError);\r\n        showErrorToast(\"Your session has expired. Please login again.\");\r\n        await AsyncStorage.clear();\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst showErrorToast = (message) => {\r\n  Toast.show({\r\n    type: \"error\",\r\n    text1: \"Error\",\r\n    text2: message,\r\n    position: \"bottom\",\r\n    visibilityTime: 4000,\r\n    autoHide: true,\r\n  });\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}