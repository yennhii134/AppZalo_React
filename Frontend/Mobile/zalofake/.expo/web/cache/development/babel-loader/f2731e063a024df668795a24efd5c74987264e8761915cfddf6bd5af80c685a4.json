{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from '../../Typography/AnimatedText';\nconst LabelBackground = _ref => {\n  let {\n    labeled,\n    labelLayoutWidth,\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    label,\n    backgroundColor,\n    roundness,\n    labelStyle,\n    maxFontSizeMultiplier,\n    testID\n  } = _ref;\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0]\n  });\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX],\n      opacity\n    }]\n  }) : null;\n  return [roundedEdgeCover, React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    testID: `${testID}-label-background`,\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n      backgroundColor,\n      opacity,\n      transform: labelTextTransform\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, typeof label === 'string' ? label : label === null || label === void 0 ? void 0 : label.props.children)];\n};\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","_ref","labeled","labelLayoutWidth","placeholderStyle","baseLabelTranslateX","topPosition","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","testID","opacity","interpolate","inputRange","outputRange","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","isRounded","roundedEdgeCover","createElement","View","key","pointerEvents","style","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","width","paddingHorizontal","numberOfLines","props","children","create","position","left","color"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  labeled,\n  labelLayoutWidth,\n  placeholderStyle,\n  baseLabelTranslateX,\n  topPosition,\n  label,\n  backgroundColor,\n  roundness,\n  labelStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: LabelBackgroundProps) => {\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0],\n  });\n\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? (\n    <Animated.View\n      key=\"labelBackground-view\"\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.view,\n        {\n          backgroundColor,\n          maxHeight: Math.max(roundness / 3, 2),\n          bottom: Math.max(roundness, 2),\n          transform: [labelTranslationX],\n          opacity,\n        },\n      ]}\n    />\n  ) : null;\n\n  return [\n    roundedEdgeCover,\n    <AnimatedText\n      key=\"labelBackground-text\"\n      testID={`${testID}-label-background`}\n      style={[\n        placeholderStyle,\n        labelStyle,\n        styles.outlinedLabel,\n        {\n          top: topPosition + 1,\n          width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n          backgroundColor,\n          opacity,\n          transform: labelTextTransform,\n        },\n      ]}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n    >\n      {typeof label === 'string' ? label : label?.props.children}\n    </AnimatedText>,\n  ];\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAG9B,OAAOC,YAAY,MAAM,+BAA+B;AAGxD,MAAMC,eAAe,GAAGC,IAAA,IAYI;EAAA,IAZH;IACvBC,OAAO;IACPC,gBAAgB;IAChBC,gBAAgB;IAChBC,mBAAmB;IACnBC,WAAW;IACXC,KAAK;IACLC,eAAe;IACfC,SAAS;IACTC,UAAU;IACVC,qBAAqB;IACrBC;EACoB,CAAC,GAAAX,IAAA;EACrB,MAAMY,OAAO,GAAGX,OAAO,CAACY,WAAW,CAAC;IAClCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAG;IACxBC,UAAU,EAAEhB,OAAO,CAACY,WAAW,CAAC;MAC9BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAACX,mBAAmB,EAAE,CAAC;IACvC,CAAC;EACH,CAAC;EAED,MAAMc,eAAe,GAAG;IACtBC,MAAM,EAAElB,OAAO,CAACY,WAAW,CAAC;MAC1BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC;EACH,CAAC;EAED,MAAMK,kBAAkB,GAAG,CAAC,GAAGX,UAAU,CAACY,SAAS,EAAEH,eAAe,CAAC;EAErE,MAAMI,SAAS,GAAGd,SAAS,GAAG,CAAC;EAC/B,MAAMe,gBAAgB,GAAGD,SAAS,GAChC3B,KAAA,CAAA6B,aAAA,CAAC5B,QAAQ,CAAC6B,IAAI;IACZC,GAAG,EAAC,sBAAsB;IAC1BC,aAAa,EAAC,MAAM;IACpBC,KAAK,EAAE,CACL/B,UAAU,CAACgC,YAAY,EACvBC,MAAM,CAACC,IAAI,EACX;MACExB,eAAe;MACfyB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC1B,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;MACrC2B,MAAM,EAAEF,IAAI,CAACC,GAAG,CAAC1B,SAAS,EAAE,CAAC,CAAC;MAC9Ba,SAAS,EAAE,CAACL,iBAAiB,CAAC;MAC9BJ;IACF,CAAC;EACD,CACH,CAAC,GACA,IAAI;EAER,OAAO,CACLW,gBAAgB,EAChB5B,KAAA,CAAA6B,aAAA,CAAC1B,YAAY;IACX4B,GAAG,EAAC,sBAAsB;IAC1Bf,MAAM,EAAG,GAAEA,MAAO,mBAAmB;IACrCiB,KAAK,EAAE,CACLzB,gBAAgB,EAChBM,UAAU,EACVqB,MAAM,CAACM,aAAa,EACpB;MACEC,GAAG,EAAEhC,WAAW,GAAG,CAAC;MACpBiC,KAAK,EAAEpC,gBAAgB,GAAGC,gBAAgB,CAACoC,iBAAiB;MAC5DhC,eAAe;MACfK,OAAO;MACPS,SAAS,EAAED;IACb,CAAC,CACD;IACFoB,aAAa,EAAE,CAAE;IACjB9B,qBAAqB,EAAEA;EAAsB,GAE5C,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmC,KAAK,CAACC,QACtC,CAAC,CAChB;AACH,CAAC;AAED,eAAe3C,eAAe;AAE9B,MAAM+B,MAAM,GAAGjC,UAAU,CAAC8C,MAAM,CAAC;EAC/BZ,IAAI,EAAE;IACJa,QAAQ,EAAE,UAAU;IACpBP,GAAG,EAAE,CAAC;IACNQ,IAAI,EAAE,EAAE;IACRP,KAAK,EAAE;EACT,CAAC;EAEDF,aAAa,EAAE;IACbQ,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPN,iBAAiB,EAAE,CAAC;IACpBO,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}