{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nconst InputLabel = props => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n    inputContainerLayout\n  } = props;\n  const {\n    INPUT_PADDING_HORIZONTAL\n  } = getConstants(isV3);\n  const {\n    width\n  } = useWindowDimensions();\n  const paddingOffset = paddingLeft && paddingRight ? {\n    paddingLeft,\n    paddingRight\n  } : {};\n  const labelTranslationX = {\n    transform: [{\n      translateX: labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  const labelStyle = _objectSpread(_objectSpread({}, font), {}, {\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0]\n    }),\n    transform: [{\n      translateX: wiggle ? error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, wiggleOffsetX, 0]\n      }) : 0\n    }, {\n      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      }) : 0\n    }, {\n      scale: labelScale !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      }) : labeled\n    }]\n  });\n  const commonStyles = [placeholderStyle, {\n    top: topPosition,\n    maxWidth: inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2\n  }, labelStyle, paddingOffset || {}];\n  const textColor = labelError && errorColor ? errorColor : placeholderColor;\n  return React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.labelContainer, Platform.OS !== 'web' && {\n      width\n    }, {\n      opacity\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    labeled,\n    labelLayoutWidth,\n    labelStyle,\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    label,\n    backgroundColor,\n    roundness,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID\n  }), React.createElement(AnimatedText, {\n    variant: \"bodySmall\",\n    onLayout: onLayoutAnimatedText,\n    onTextLayout: onLabelTextLayout,\n    style: [commonStyles, {\n      color: activeColor\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: `${testID}-label-active`\n  }, label), React.createElement(AnimatedText, {\n    variant: focused ? 'bodyLarge' : 'bodySmall',\n    style: [commonStyles, {\n      color: textColor,\n      opacity: placeholderOpacity\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: `${testID}-label-inactive`\n  }, label));\n};\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nexport default React.memo(InputLabel);","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","useWindowDimensions","AnimatedText","getConstants","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelBackground","label","labelError","onLayoutAnimatedText","onLabelTextLayout","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","isV3","inputContainerLayout","INPUT_PADDING_HORIZONTAL","width","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","_objectSpread","translateY","scale","commonStyles","top","maxWidth","textColor","createElement","View","pointerEvents","style","absoluteFill","styles","labelContainer","OS","variant","onLayout","onTextLayout","color","numberOfLines","create","zIndex","memo"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n    inputContainerLayout,\n  } = props;\n\n  const { INPUT_PADDING_HORIZONTAL } = getConstants(isV3);\n  const { width } = useWindowDimensions();\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const commonStyles = [\n    placeholderStyle,\n    {\n      top: topPosition,\n      maxWidth: inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2,\n    },\n    labelStyle,\n    paddingOffset || {},\n  ];\n\n  const textColor = (\n    labelError && errorColor ? errorColor : placeholderColor\n  ) as ColorValue;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.labelContainer,\n        Platform.OS !== 'web' && { width },\n        { opacity },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        labeled,\n        labelLayoutWidth,\n        labelStyle,\n        placeholderStyle,\n        baseLabelTranslateX,\n        topPosition,\n        label,\n        backgroundColor,\n        roundness,\n        maxFontSizeMultiplier: maxFontSizeMultiplier,\n        testID,\n      })}\n      <AnimatedText\n        variant=\"bodySmall\"\n        onLayout={onLayoutAnimatedText}\n        onTextLayout={onLabelTextLayout}\n        style={[\n          commonStyles,\n          {\n            color: activeColor,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-active`}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        variant={focused ? 'bodyLarge' : 'bodySmall'}\n        style={[\n          commonStyles,\n          {\n            color: textColor,\n            opacity: placeholderOpacity,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-inactive`}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}