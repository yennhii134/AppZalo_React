{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK2_Nam4\\\\CNM\\\\BTL\\\\New_3\\\\AppZalo_CNM\\\\Frontend\\\\Mobile\\\\zalofake\\\\node_modules\\\\react-native-elements\\\\dist\\\\checkbox\\\\CheckBoxIcon.js\";\nimport React from 'react';\nimport getIconType from '../helpers/getIconType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size = 24,\n  checkedIcon = 'check-square-o',\n  uncheckedIcon = 'square-o',\n  iconType,\n  checkedColor,\n  uncheckedColor = '#bfbfbf'\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n  const VectorIcon = iconType ? getIconType(iconType) : getIconType('font-awesome');\n  return _jsxDEV(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\nexport default CheckBoxIcon;","map":{"version":3,"names":["React","getIconType","jsxDEV","_jsxDEV","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","color","name","style","minWidth","onLongPress","onPress","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/HK2_Nam4/CNM/BTL/New_3/AppZalo_CNM/Frontend/Mobile/zalofake/node_modules/react-native-elements/dist/checkbox/CheckBoxIcon.js"],"sourcesContent":["import React from 'react';\nimport getIconType from '../helpers/getIconType';\nconst CheckBoxIcon = ({ checked, onIconPress, onLongIconPress, size = 24, checkedIcon = 'check-square-o', uncheckedIcon = 'square-o', iconType, checkedColor, uncheckedColor = '#bfbfbf', }) => {\n    if (checked && React.isValidElement(checkedIcon)) {\n        return checkedIcon;\n    }\n    if (!checked && React.isValidElement(uncheckedIcon)) {\n        return uncheckedIcon;\n    }\n    const VectorIcon = iconType\n        ? getIconType(iconType)\n        : getIconType('font-awesome');\n    return (<VectorIcon color={checked ? checkedColor : uncheckedColor} name={checked ? checkedIcon : uncheckedIcon} size={size || 24} style={{ minWidth: size || 24 }} onLongPress={onLongIconPress} onPress={onIconPress}/>);\n};\nexport default CheckBoxIcon;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,eAAe;EAAEC,IAAI,GAAG,EAAE;EAAEC,WAAW,GAAG,gBAAgB;EAAEC,aAAa,GAAG,UAAU;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,cAAc,GAAG;AAAW,CAAC,KAAK;EAC5L,IAAIR,OAAO,IAAIL,KAAK,CAACc,cAAc,CAACL,WAAW,CAAC,EAAE;IAC9C,OAAOA,WAAW;EACtB;EACA,IAAI,CAACJ,OAAO,IAAIL,KAAK,CAACc,cAAc,CAACJ,aAAa,CAAC,EAAE;IACjD,OAAOA,aAAa;EACxB;EACA,MAAMK,UAAU,GAAGJ,QAAQ,GACrBV,WAAW,CAACU,QAAQ,CAAC,GACrBV,WAAW,CAAC,cAAc,CAAC;EACjC,OAAQE,OAAA,CAACY,UAAU;IAACC,KAAK,EAAEX,OAAO,GAAGO,YAAY,GAAGC,cAAe;IAACI,IAAI,EAAEZ,OAAO,GAAGI,WAAW,GAAGC,aAAc;IAACF,IAAI,EAAEA,IAAI,IAAI,EAAG;IAACU,KAAK,EAAE;MAAEC,QAAQ,EAAEX,IAAI,IAAI;IAAG,CAAE;IAACY,WAAW,EAAEb,eAAgB;IAACc,OAAO,EAAEf;EAAY;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC7N,CAAC;AACD,eAAerB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}