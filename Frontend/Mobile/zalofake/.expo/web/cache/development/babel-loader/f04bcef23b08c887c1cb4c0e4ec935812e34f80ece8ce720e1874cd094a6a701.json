{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateAccount = function CreateAccount(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    textName = _useState2[0],\n    setTextName = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isValidName = _useState4[0],\n    setIsValidName = _useState4[1];\n  var handleTextChange = function handleTextChange(input) {\n    var isValidInput = /^([a-zA-Zá-ỹÁ-Ỹ\\s]{2,40})$/.test(input);\n    setTextName(input);\n    setIsValidName(isValidInput);\n  };\n  var handlePressablePress = function handlePressablePress() {\n    if (isValidName) {\n      navigation.navigate(\"CreateAccount1\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"T\\xEAn Zalo\"\n      }), _jsx(TextInput, {\n        onChangeText: handleTextChange,\n        value: textName,\n        placeholder: \"Nh\\u1EADp t\\xEAn c\\u1EE7a b\\u1EA1n (2-40 k\\xFD t\\u1EF1)\",\n        style: styles.input\n      }), _jsx(Text, {\n        style: styles.note,\n        children: \"L\\u01B0u \\xFD: S\\u1EED d\\u1EE5ng t\\xEAn th\\u1EADt \\u0111\\u1EC3 b\\u1EA1n b\\xE8 d\\u1EC5 d\\xE0ng nh\\u1EADn ra b\\u1EA1n.\"\n      })]\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Pressable, {\n        style: [styles.button, isValidName ? styles.validButton : styles.invalidButton],\n        disabled: !isValidName,\n        onPress: handlePressablePress,\n        children: _jsx(Image, {\n          style: styles.buttonIcon,\n          source: require(\"../../../assets/arrow.png\")\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\"\n  },\n  inputContainer: {\n    marginHorizontal: 20,\n    marginBottom: 30\n  },\n  label: {\n    fontWeight: \"bold\",\n    fontSize: 20,\n    marginBottom: 10\n  },\n  input: {\n    borderBottomWidth: 2,\n    borderBottomColor: \"#64D6EA\",\n    fontSize: 16,\n    paddingVertical: 10\n  },\n  note: {\n    fontSize: 14,\n    color: \"#666\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    alignItems: \"center\"\n  },\n  button: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: \"#BFD3F8\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  validButton: {\n    backgroundColor: \"#0091FF\"\n  },\n  invalidButton: {\n    backgroundColor: \"#BFD3F8\",\n    opacity: 0.7\n  },\n  buttonIcon: {\n    width: 40,\n    height: 40\n  }\n});\nexport default CreateAccount;","map":{"version":3,"names":["React","useState","View","Text","Pressable","Image","TextInput","StyleSheet","jsx","_jsx","jsxs","_jsxs","CreateAccount","_ref","navigation","_useState","_useState2","_slicedToArray","textName","setTextName","_useState3","_useState4","isValidName","setIsValidName","handleTextChange","input","isValidInput","test","handlePressablePress","navigate","style","styles","container","children","inputContainer","label","onChangeText","value","placeholder","note","buttonContainer","button","validButton","invalidButton","disabled","onPress","buttonIcon","source","require","create","flex","backgroundColor","justifyContent","marginHorizontal","marginBottom","fontWeight","fontSize","borderBottomWidth","borderBottomColor","paddingVertical","color","marginTop","alignItems","width","height","borderRadius","opacity"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/components/LoginComponents/CreateAccount.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { View, Text, Pressable, Image, TextInput } from \"react-native\";\r\n\r\n// const CreateAccount = ({ navigation }) => {\r\n//   const [textName, setTextName] = useState(\"\");\r\n//   const [isValidName, setIsValidName] = useState(false);\r\n\r\n//   const handleTextChange = (input) => {\r\n//     // Kiểm tra nếu input chỉ chứa chữ cái và có độ dài từ 2 đến 40 ký tự bao gồm tiếng việt\r\n//     // const isValidInput = /^[a-zA-ZđĐàÀáÁâÂấẤầẦẩẨẫẪậẬắẮằẰẳẲẵẴặẶèÈéÉêÊếẾềỂễỆìÌíÍĩĨịỊòÒóÓôÔốỐồỒổỔỗỖộỘùÙúÚũŨụỤủỦưỨỨừỪửỬữỮựỰỳỲýÝỵỴỷỶỹỸ\\s]{2,40}$/.test(input);\r\n//     const isValidInput = /^([a-zA-Zá-ỹÁ-Ỹ\\s]{2,40})$/.test(input);\r\n//     // const isValidInput = /^([\\p{L}\\s]{2,40})$/.test(input);\r\n\r\n//     setTextName(input);\r\n//     if (isValidInput) {\r\n//       setIsValidName(true);\r\n//     } else {\r\n//       setIsValidName(false);\r\n//     }\r\n//   };\r\n//   const handlePressablePress = () => {\r\n//     if (isValidName) {\r\n//       navigation.navigate(\"CreateAccount1\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View className={\"flex-1  bg-white\"}>\r\n//       <View className={\"m-5\"}>\r\n//         <Text className={\"font-bold text-black text-xl\"}>Tên zalo</Text>\r\n//         <TextInput\r\n//           onChangeText={handleTextChange}\r\n//           value={textName}\r\n//           placeholder=\"Gồm 2-40 kí tự\"\r\n//           className={\r\n//             \"font-semibold placeholder-gray-400 text-lg focus:outline-none mt-5 border-b-[#64D6EA] border-b-[2px]\"\r\n//           }\r\n//         ></TextInput>\r\n//         <Text className={\"font-semibold text-blac mt-5\"}>\r\n//           Lưu ý khi đặt tên:\r\n//         </Text>\r\n//         <Text className={\"font-semibold text-black mt-5\"}>\r\n//           Không vi phạm{\" \"}\r\n//           <Pressable>\r\n//             <Text className={\"font-semibold text-blue-500 p-2\"}>\r\n//               Quy định đặt tên trên Zalo\r\n//             </Text>\r\n//           </Pressable>\r\n//         </Text>\r\n//         <Text className={\"font-semibold text-black \"}>\r\n//           Nên sử dụng tên thật để giúp bạn bè dễ nhận ra bạn\r\n//         </Text>\r\n//       </View>\r\n//       <View className={\"flex-1 justify-end items-end m-5\"}>\r\n//         <Pressable\r\n//           className={\r\n//             \"w-[70px] h-[70px] btn rounded-full font-bold text-white items-center justify-center \" +\r\n//             `${isValidName ? \" bg-[#0091FF]\" : \" bg-[#BFD3F8]\"}`\r\n//           }\r\n//           disabled={!isValidName}\r\n//           onPress={handlePressablePress}\r\n//         >\r\n//           <View>\r\n//             <Image\r\n//               className={\"w-[50px] h-[50px]\"}\r\n//               source={require(\"../../../assets/arrow.png\")}\r\n//             ></Image>\r\n//           </View>\r\n//         </Pressable>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n// export default CreateAccount;\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Pressable,\r\n  Image,\r\n  TextInput,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nconst CreateAccount = ({ navigation }) => {\r\n  const [textName, setTextName] = useState(\"\");\r\n  const [isValidName, setIsValidName] = useState(false);\r\n\r\n  const handleTextChange = (input) => {\r\n    const isValidInput = /^([a-zA-Zá-ỹÁ-Ỹ\\s]{2,40})$/.test(input);\r\n\r\n    setTextName(input);\r\n    setIsValidName(isValidInput);\r\n  };\r\n\r\n  const handlePressablePress = () => {\r\n    if (isValidName) {\r\n      navigation.navigate(\"CreateAccount1\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.inputContainer}>\r\n        <Text style={styles.label}>Tên Zalo</Text>\r\n        <TextInput\r\n          onChangeText={handleTextChange}\r\n          value={textName}\r\n          placeholder=\"Nhập tên của bạn (2-40 ký tự)\"\r\n          style={styles.input}\r\n        />\r\n        <Text style={styles.note}>\r\n          Lưu ý: Sử dụng tên thật để bạn bè dễ dàng nhận ra bạn.\r\n        </Text>\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <Pressable\r\n          style={[\r\n            styles.button,\r\n            isValidName ? styles.validButton : styles.invalidButton,\r\n          ]}\r\n          disabled={!isValidName}\r\n          onPress={handlePressablePress}\r\n        >\r\n          <Image\r\n            style={styles.buttonIcon}\r\n            source={require(\"../../../assets/arrow.png\")}\r\n          />\r\n        </Pressable>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputContainer: {\r\n    marginHorizontal: 20,\r\n    marginBottom: 30,\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: \"#64D6EA\",\r\n    fontSize: 16,\r\n    paddingVertical: 10,\r\n  },\r\n  note: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n    marginTop: 10,\r\n  },\r\n  buttonContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: \"#BFD3F8\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  validButton: {\r\n    backgroundColor: \"#0091FF\",\r\n  },\r\n  invalidButton: {\r\n    backgroundColor: \"#BFD3F8\",\r\n    opacity: 0.7,\r\n  },\r\n  buttonIcon: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n});\r\n\r\nexport default CreateAccount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}