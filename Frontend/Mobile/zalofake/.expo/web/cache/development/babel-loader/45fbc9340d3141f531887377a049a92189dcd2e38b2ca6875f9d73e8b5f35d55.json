{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport Toast from \"react-native-toast-message\";\nimport * as Device from \"expo-device\";\nimport axiosInstance from \"../api/axiosInstance\";\nvar useLogin = function useLogin() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginCount = _useState4[0],\n    setLoginCount = _useState4[1];\n  var _useAuthContext = useAuthContext(),\n    setAuthUser = _useAuthContext.setAuthUser,\n    setAccessToken = _useAuthContext.setAccessToken,\n    setRefreshToken = _useAuthContext.setRefreshToken;\n  var login = function () {\n    var _ref = _asyncToGenerator(function* (phone, password) {\n      setLoading(true);\n      try {\n        var device_id = Device.osBuildId;\n        var response = yield axiosInstance.post(\"/auth/login\", {\n          phone: phone,\n          password: password,\n          device_id: device_id\n        });\n        var data = response.data;\n        if (response && (response == null ? void 0 : response.status) === 200) {\n          setAuthUser(data.user);\n          setAccessToken(data.accessToken);\n          setRefreshToken(data.refreshToken);\n        } else {\n          showMesg(\"Error during login\", \"error\");\n        }\n      } catch (error) {\n        if (error.response.status === 401) {\n          console.log(loginCount);\n          setLoginCount(loginCount + 1);\n          if (loginCount === 5) {\n            setLoginCount(1);\n          }\n          showMesg(\"Invalid phone or password !\", \"error\");\n        } else if (error.request) {\n          showMesg(\"Error server, please try again !\", \"error\");\n          throw error;\n        } else {\n          showMesg(\"Error during login\", \"error\");\n          throw error;\n        }\n      }\n      setLoading(false);\n    });\n    return function login(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return {\n    login: login,\n    setLoginCount: setLoginCount,\n    loading: loading,\n    loginCount: loginCount\n  };\n};\nvar showMesg = function showMesg(mesg, type) {\n  Toast.show({\n    type: `${type}`,\n    text1: `${mesg}`,\n    text2: `${mesg}`\n  });\n};\nexport default useLogin;","map":{"version":3,"names":["useState","useAuthContext","Toast","Device","axiosInstance","useLogin","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","loginCount","setLoginCount","_useAuthContext","setAuthUser","setAccessToken","setRefreshToken","login","_ref","_asyncToGenerator","phone","password","device_id","osBuildId","response","post","data","status","user","accessToken","refreshToken","showMesg","error","console","log","request","_x","_x2","apply","arguments","mesg","type","show","text1","text2"],"sources":["C:/BaoTruc/iuh/ky2nam4/CNM/DeTai/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../contexts/AuthContext\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport * as Device from \"expo-device\";\r\n\r\nimport axiosInstance from \"../api/axiosInstance\";\r\n\r\nconst useLogin = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [loginCount, setLoginCount] = useState(1);\r\n  const { setAuthUser, setAccessToken, setRefreshToken } = useAuthContext();\r\n  const login = async (phone, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const device_id = Device.osBuildId;\r\n      const response = await axiosInstance.post(\"/auth/login\", {\r\n        phone,\r\n        password,\r\n        device_id,\r\n      });\r\n\r\n      const data = response.data;\r\n\r\n      if (response && response?.status === 200) {\r\n        setAuthUser(data.user);\r\n        setAccessToken(data.accessToken);\r\n        setRefreshToken(data.refreshToken);\r\n        // console.log(data.accessToken);\r\n      } else {\r\n        showMesg(\"Error during login\", \"error\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        console.log(loginCount);\r\n        setLoginCount(loginCount + 1);\r\n        if (loginCount === 5) {\r\n          setLoginCount(1);\r\n        }\r\n        showMesg(\"Invalid phone or password !\", \"error\");\r\n      } else if (error.request) {\r\n        showMesg(\"Error server, please try again !\", \"error\");\r\n        throw error;\r\n      } else {\r\n        showMesg(\"Error during login\", \"error\");\r\n        throw error;\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return { login, setLoginCount, loading, loginCount };\r\n};\r\n\r\nconst showMesg = (mesg, type) => {\r\n  Toast.show({\r\n    type: `${type}`,\r\n    text1: `${mesg}`,\r\n    text2: `${mesg}`,\r\n  });\r\n};\r\n\r\nexport default useLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}