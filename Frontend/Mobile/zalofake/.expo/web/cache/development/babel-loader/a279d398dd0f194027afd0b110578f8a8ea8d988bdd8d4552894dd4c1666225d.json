{"ast":null,"code":"import { useAuthContext } from \"../contexts/AuthContext\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nconst useUpdate = () => {\n  const {\n    setAuthUser\n  } = useAuthContext();\n  const updateProfile = async (name, email, gender, dob) => {\n    try {\n      const response = await axiosInstance.post(\"/users/update-profile\", {\n        name,\n        email,\n        gender,\n        dob\n      });\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        const {\n          user\n        } = data;\n        if (user) {\n          await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n          setAuthUser(user);\n        } else {\n          throw new Error(\"Failed to update profile\");\n        }\n      } else {\n        throw new Error(data.message || \"Failed to update profile\");\n      }\n    } catch (error) {\n      console.error(\"error: \", error);\n    }\n  };\n  return {\n    updateProfile\n  };\n};\nexport default useUpdate;","map":{"version":3,"names":["useAuthContext","Alert","axiosInstance","AsyncStorage","useUpdate","setAuthUser","updateProfile","name","email","gender","dob","response","post","data","status","user","setItem","JSON","stringify","Error","message","error","console"],"sources":["D:/HK2_Nam4/CNM/BTL/New_3/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useUpdate.js"],"sourcesContent":["import { useAuthContext } from \"../contexts/AuthContext\";\r\nimport { Alert } from \"react-native\";\r\nimport axiosInstance from \"../api/axiosInstance\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst useUpdate = () => {\r\n  const { setAuthUser } = useAuthContext();\r\n\r\n  const updateProfile = async (name, email, gender, dob) => {\r\n    try {\r\n      const response = await axiosInstance.post(\"/users/update-profile\", {\r\n        name,\r\n        email,\r\n        gender,\r\n        dob,\r\n      });\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { user } = data;\r\n        if (user) {\r\n          await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n          setAuthUser(user);\r\n        } else {\r\n          throw new Error(\"Failed to update profile\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error: \", error);\r\n    } \r\n  };\r\n\r\n\r\n  return { updateProfile };\r\n};\r\n\r\nexport default useUpdate;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,yBAAyB;AAAC,OAAAC,KAAA;AAEzD,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGL,cAAc,CAAC,CAAC;EAExC,MAAMM,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,GAAG,KAAK;IACxD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,aAAa,CAACU,IAAI,CAAC,uBAAuB,EAAE;QACjEL,IAAI;QACJC,KAAK;QACLC,MAAM;QACNC;MACF,CAAC,CAAC;MAEF,MAAM;QAAEG,IAAI;QAAEC;MAAO,CAAC,GAAGH,QAAQ;MAEjC,IAAIG,MAAM,KAAK,GAAG,EAAE;QAClB,MAAM;UAAEC;QAAK,CAAC,GAAGF,IAAI;QACrB,IAAIE,IAAI,EAAE;UACR,MAAMZ,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;UACxDV,WAAW,CAACU,IAAI,CAAC;QACnB,CAAC,MAAM;UACL,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAACN,IAAI,CAACO,OAAO,IAAI,0BAA0B,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF,CAAC;EAGD,OAAO;IAAEf;EAAc,CAAC;AAC1B,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}