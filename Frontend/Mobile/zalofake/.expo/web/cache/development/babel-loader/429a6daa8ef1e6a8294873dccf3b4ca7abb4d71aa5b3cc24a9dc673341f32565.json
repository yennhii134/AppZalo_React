{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"state\", \"navigation\", \"descriptors\"],\n  _excluded2 = [\"navigationState\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TabBar, TabBarIndicator } from 'react-native-tab-view';\nexport default function TabBarTop(_ref) {\n  let {\n      state,\n      navigation,\n      descriptors\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const {\n    colors\n  } = useTheme();\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n  const activeColor = focusedOptions.tabBarActiveTintColor ?? colors.text;\n  const inactiveColor = focusedOptions.tabBarInactiveTintColor ?? Color(activeColor).alpha(0.5).rgb().string();\n  return React.createElement(TabBar, _extends({}, rest, {\n    navigationState: state,\n    scrollEnabled: focusedOptions.tabBarScrollEnabled,\n    bounces: focusedOptions.tabBarBounces,\n    activeColor: activeColor,\n    inactiveColor: inactiveColor,\n    pressColor: focusedOptions.tabBarPressColor,\n    pressOpacity: focusedOptions.tabBarPressOpacity,\n    tabStyle: focusedOptions.tabBarItemStyle,\n    indicatorStyle: [{\n      backgroundColor: colors.primary\n    }, focusedOptions.tabBarIndicatorStyle],\n    gap: focusedOptions.tabBarGap,\n    android_ripple: focusedOptions.tabBarAndroidRipple,\n    indicatorContainerStyle: focusedOptions.tabBarIndicatorContainerStyle,\n    contentContainerStyle: focusedOptions.tabBarContentContainerStyle,\n    style: [{\n      backgroundColor: colors.card\n    }, focusedOptions.tabBarStyle],\n    getAccessibilityLabel: _ref2 => {\n      let {\n        route\n      } = _ref2;\n      return descriptors[route.key].options.tabBarAccessibilityLabel;\n    },\n    getTestID: _ref3 => {\n      let {\n        route\n      } = _ref3;\n      return descriptors[route.key].options.tabBarTestID;\n    },\n    onTabPress: _ref4 => {\n      let {\n        route,\n        preventDefault\n      } = _ref4;\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (event.defaultPrevented) {\n        preventDefault();\n      }\n    },\n    onTabLongPress: _ref5 => {\n      let {\n        route\n      } = _ref5;\n      return navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    },\n    renderIcon: _ref6 => {\n      let {\n        route,\n        focused,\n        color\n      } = _ref6;\n      const {\n        options\n      } = descriptors[route.key];\n      if (options.tabBarShowIcon === false) {\n        return null;\n      }\n      if (options.tabBarIcon !== undefined) {\n        const icon = options.tabBarIcon({\n          focused,\n          color\n        });\n        return React.createElement(View, {\n          style: [styles.icon, options.tabBarIconStyle]\n        }, icon);\n      }\n      return null;\n    },\n    renderLabel: _ref7 => {\n      let {\n        route,\n        focused,\n        color\n      } = _ref7;\n      const {\n        options\n      } = descriptors[route.key];\n      if (options.tabBarShowLabel === false) {\n        return null;\n      }\n      const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      if (typeof label === 'string') {\n        return React.createElement(Text, {\n          style: [styles.label, {\n            color\n          }, options.tabBarLabelStyle],\n          allowFontScaling: options.tabBarAllowFontScaling\n        }, label);\n      }\n      const children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      return label({\n        focused,\n        color,\n        children\n      });\n    },\n    renderBadge: _ref8 => {\n      let {\n        route\n      } = _ref8;\n      const {\n        tabBarBadge\n      } = descriptors[route.key].options;\n      return (tabBarBadge === null || tabBarBadge === void 0 ? void 0 : tabBarBadge()) ?? null;\n    },\n    renderIndicator: _ref9 => {\n      let {\n          navigationState: state\n        } = _ref9,\n        rest = _objectWithoutProperties(_ref9, _excluded2);\n      return focusedOptions.tabBarIndicator ? focusedOptions.tabBarIndicator(_objectSpread({\n        state: state\n      }, rest)) : React.createElement(TabBarIndicator, _extends({\n        navigationState: state\n      }, rest));\n    }\n  }));\n}\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24\n  },\n  label: {\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["useTheme","Color","React","StyleSheet","Text","View","TabBar","TabBarIndicator","TabBarTop","_ref","state","navigation","descriptors","rest","_objectWithoutProperties","_excluded","colors","focusedOptions","routes","index","key","options","activeColor","tabBarActiveTintColor","text","inactiveColor","tabBarInactiveTintColor","alpha","rgb","string","createElement","_extends","navigationState","scrollEnabled","tabBarScrollEnabled","bounces","tabBarBounces","pressColor","tabBarPressColor","pressOpacity","tabBarPressOpacity","tabStyle","tabBarItemStyle","indicatorStyle","backgroundColor","primary","tabBarIndicatorStyle","gap","tabBarGap","android_ripple","tabBarAndroidRipple","indicatorContainerStyle","tabBarIndicatorContainerStyle","contentContainerStyle","tabBarContentContainerStyle","style","card","tabBarStyle","getAccessibilityLabel","_ref2","route","tabBarAccessibilityLabel","getTestID","_ref3","tabBarTestID","onTabPress","_ref4","preventDefault","event","emit","type","target","canPreventDefault","defaultPrevented","onTabLongPress","_ref5","renderIcon","_ref6","focused","color","tabBarShowIcon","tabBarIcon","undefined","icon","styles","tabBarIconStyle","renderLabel","_ref7","tabBarShowLabel","label","tabBarLabel","title","name","tabBarLabelStyle","allowFontScaling","tabBarAllowFontScaling","children","renderBadge","_ref8","tabBarBadge","renderIndicator","_ref9","_excluded2","tabBarIndicator","_objectSpread","create","height","width","textAlign","textTransform","fontSize","margin"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\@react-navigation\\material-top-tabs\\src\\views\\MaterialTopTabBar.tsx"],"sourcesContent":["import {\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TabBar, TabBarIndicator } from 'react-native-tab-view';\n\nimport type { MaterialTopTabBarProps } from '../types';\n\nexport default function TabBarTop({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: MaterialTopTabBarProps) {\n  const { colors } = useTheme();\n\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  const activeColor = focusedOptions.tabBarActiveTintColor ?? colors.text;\n  const inactiveColor =\n    focusedOptions.tabBarInactiveTintColor ??\n    Color(activeColor).alpha(0.5).rgb().string();\n\n  return (\n    <TabBar\n      {...rest}\n      navigationState={state}\n      scrollEnabled={focusedOptions.tabBarScrollEnabled}\n      bounces={focusedOptions.tabBarBounces}\n      activeColor={activeColor}\n      inactiveColor={inactiveColor}\n      pressColor={focusedOptions.tabBarPressColor}\n      pressOpacity={focusedOptions.tabBarPressOpacity}\n      tabStyle={focusedOptions.tabBarItemStyle}\n      indicatorStyle={[\n        { backgroundColor: colors.primary },\n        focusedOptions.tabBarIndicatorStyle,\n      ]}\n      gap={focusedOptions.tabBarGap}\n      android_ripple={focusedOptions.tabBarAndroidRipple}\n      indicatorContainerStyle={focusedOptions.tabBarIndicatorContainerStyle}\n      contentContainerStyle={focusedOptions.tabBarContentContainerStyle}\n      style={[{ backgroundColor: colors.card }, focusedOptions.tabBarStyle]}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      onTabLongPress={({ route }) =>\n        navigation.emit({\n          type: 'tabLongPress',\n          target: route.key,\n        })\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (options.tabBarShowIcon === false) {\n          return null;\n        }\n\n        if (options.tabBarIcon !== undefined) {\n          const icon = options.tabBarIcon({ focused, color });\n\n          return (\n            <View style={[styles.icon, options.tabBarIconStyle]}>{icon}</View>\n          );\n        }\n\n        return null;\n      }}\n      renderLabel={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (options.tabBarShowLabel === false) {\n          return null;\n        }\n\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : (route as Route<string>).name;\n\n        if (typeof label === 'string') {\n          return (\n            <Text\n              style={[styles.label, { color }, options.tabBarLabelStyle]}\n              allowFontScaling={options.tabBarAllowFontScaling}\n            >\n              {label}\n            </Text>\n          );\n        }\n\n        const children =\n          typeof options.tabBarLabel === 'string'\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        return label({ focused, color, children });\n      }}\n      renderBadge={({ route }) => {\n        const { tabBarBadge } = descriptors[route.key].options;\n\n        return tabBarBadge?.() ?? null;\n      }}\n      renderIndicator={({ navigationState: state, ...rest }) => {\n        return focusedOptions.tabBarIndicator ? (\n          focusedOptions.tabBarIndicator({\n            state: state as TabNavigationState<ParamListBase>,\n            ...rest,\n          })\n        ) : (\n          <TabBarIndicator navigationState={state} {...rest} />\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}