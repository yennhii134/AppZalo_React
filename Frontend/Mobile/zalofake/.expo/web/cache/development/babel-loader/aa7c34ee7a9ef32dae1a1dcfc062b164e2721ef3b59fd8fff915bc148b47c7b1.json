{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatList = function ChatList(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var response = yield fetch('https://your-api-endpoint/messages');\n        var data = yield response.json();\n        setMessages(data);\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"ChatContent\", {\n          messageId: item.id\n        });\n      },\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [{\n          backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"white\"\n        }, styles.messageItem];\n      },\n      children: [_jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Chat List\"\n    }), _jsx(FlatList, {\n      data: messages,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 16\n  },\n  messageItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\"\n  },\n  messageText: {\n    fontSize: 16\n  }\n};\nexport default ChatList;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","Pressable","FlatList","jsx","_jsx","jsxs","_jsxs","ChatList","_ref","navigation","_useState","_useState2","_slicedToArray","messages","setMessages","fetchData","_ref2","_asyncToGenerator","response","fetch","data","json","apply","arguments","renderItem","_ref3","item","onPress","navigate","messageId","id","style","_ref4","pressed","backgroundColor","styles","messageItem","children","messageText","text","container","header","keyExtractor","toString","flex","padding","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","_NativeWindStyleSheet","create","atRules","topics"],"sources":["D:/ZaloApp/AppZalo_CNM/Frontend/Mobile/zalofake/src/components/ChatList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, Pressable, FlatList } from \"react-native\";\r\n\r\nconst ChatList = ({ navigation }) => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching messages from an API\r\n    // Replace this with your actual data fetching logic\r\n    const fetchData = async () => {\r\n      // Fetch your messages here\r\n      // For example:\r\n      const response = await fetch('https://your-api-endpoint/messages');\r\n      const data = await response.json();\r\n      setMessages(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Pressable\r\n      onPress={() => navigation.navigate(\"ChatContent\", { messageId: item.id })}\r\n      style={({ pressed }) => [\r\n        {\r\n          backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"white\",\r\n        },\r\n        styles.messageItem,\r\n      ]}\r\n    >\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n    </Pressable>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Chat List</Text>\r\n      <FlatList\r\n        data={messages}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n  },\r\n  messageItem: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ddd\",\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n};\r\n\r\nexport default ChatList;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}