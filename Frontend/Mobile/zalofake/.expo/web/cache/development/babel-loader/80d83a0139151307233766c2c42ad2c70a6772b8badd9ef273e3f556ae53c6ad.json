{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport { forwardRef } from '../../utils/forwardRef';\nconst AppbarBackAction = forwardRef((_ref, ref) => {\n  let {\n      accessibilityLabel = 'Back'\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(AppbarAction, _extends({\n    accessibilityLabel: accessibilityLabel\n  }, rest, {\n    icon: AppbarBackIcon,\n    isLeading: true,\n    ref: ref\n  }));\n});\nAppbarBackAction.displayName = 'Appbar.BackAction';\nexport default AppbarBackAction;\nexport { AppbarBackAction };","map":{"version":3,"names":["React","AppbarAction","AppbarBackIcon","forwardRef","AppbarBackAction","_ref","ref","accessibilityLabel","rest","_objectWithoutProperties","_excluded","createElement","_extends","icon","isLeading","displayName"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarBackAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  GestureResponderEvent,\n  StyleProp,\n  ViewStyle,\n  View,\n  Animated,\n} from 'react-native';\n\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport { forwardRef } from '../../utils/forwardRef';\n\nexport type Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarBackAction = forwardRef<View, Props>(\n  ({ accessibilityLabel = 'Back', ...rest }: Props, ref) => (\n    <AppbarAction\n      accessibilityLabel={accessibilityLabel}\n      {...rest}\n      icon={AppbarBackIcon}\n      isLeading\n      ref={ref}\n    />\n  )\n);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\n\nexport default AppbarBackAction;\n\n// @component-docs ignore-next-line\nexport { AppbarBackAction };\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAU9B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,wBAAwB;AA+CnD,MAAMC,gBAAgB,GAAGD,UAAU,CACjC,CAAAE,IAAA,EAAkDC,GAAG;EAAA,IAApD;MAAEC,kBAAkB,GAAG;IAAuB,CAAC,GAAAF,IAAA;IAAbG,IAAA,GAAAC,wBAAA,CAAaJ,IAAA,EAAAK,SAAA;EAAA,OAC9CV,KAAA,CAAAW,aAAA,CAACV,YAAY,EAAAW,QAAA;IACXL,kBAAkB,EAAEA;EAAmB,GACnCC,IAAI;IACRK,IAAI,EAAEX,cAAe;IACrBY,SAAS;IACTR,GAAG,EAAEA;EAAI,EACV,CAAC;AAAA,CAEN,CAAC;AAEDF,gBAAgB,CAACW,WAAW,GAAG,mBAAmB;AAElD,eAAeX,gBAAgB;AAG/B,SAASA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}