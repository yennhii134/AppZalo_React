{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ChatList = function ChatList(_ref) {\n  var navigation = _ref.navigation;\n  var data = [{\n    id: 1,\n    name: \"User 1\"\n  }, {\n    id: 2,\n    name: \"User 2\"\n  }];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Chat\", {\n          userId: item.id,\n          userName: item.name\n        });\n      },\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [{\n          backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"white\"\n        }, styles.chatItem];\n      },\n      children: _jsx(Text, {\n        style: styles.chatText,\n        children: item.name\n      })\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: data,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  chatItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\"\n  },\n  chatText: {\n    fontSize: 16\n  }\n};\nexport default ChatList;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","View","Text","Pressable","FlatList","jsx","_jsx","ChatList","_ref","navigation","data","id","name","renderItem","_ref2","item","onPress","navigate","userId","userName","style","_ref3","pressed","backgroundColor","styles","chatItem","children","chatText","container","keyExtractor","toString","flex","padding","borderBottomWidth","borderBottomColor","fontSize","_NativeWindStyleSheet","create","atRules","topics"],"sources":["D:/ZaloApp/AppZalo_CNM/Frontend/Mobile/zalofake/src/components/ChatList.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, Pressable, FlatList } from \"react-native\";\r\n\r\nconst ChatList = ({ navigation }) => {\r\n  const data = [\r\n    { id: 1, name: \"User 1\" },\r\n    { id: 2, name: \"User 2\" },\r\n    // ...Thêm dữ liệu chat khác nếu cần\r\n  ];\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Pressable\r\n      onPress={() => navigation.navigate(\"Chat\", { userId: item.id, userName: item.name })}\r\n      style={({ pressed }) => [\r\n        {\r\n          backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"white\",\r\n        },\r\n        styles.chatItem,\r\n      ]}\r\n    >\r\n      <Text style={styles.chatText}>{item.name}</Text>\r\n    </Pressable>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={data}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ddd\",\r\n  },\r\n  chatText: {\r\n    fontSize: 16,\r\n  },\r\n};\r\n\r\nexport default ChatList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5B,IAAMC,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,CAE1B;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OACxBT,IAAA,CAACH,SAAS;MACRa,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,UAAU,CAACQ,QAAQ,CAAC,MAAM,EAAE;UAAEC,MAAM,EAAEH,IAAI,CAACJ,EAAE;UAAEQ,QAAQ,EAAEJ,IAAI,CAACH;QAAK,CAAC,CAAC;MAAA,CAAC;MACrFQ,KAAK,EAAE,SAAAA,MAAAC,KAAA;QAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;QAAA,OAAO,CACtB;UACEC,eAAe,EAAED,OAAO,GAAG,oBAAoB,GAAG;QACpD,CAAC,EACDE,MAAM,CAACC,QAAQ,CAChB;MAAA,CAAC;MAAAC,QAAA,EAEFpB,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAEI,MAAM,CAACG,QAAS;QAAAD,QAAA,EAAEX,IAAI,CAACH;MAAI,CAAO;IAAC,CACvC,CAAC;EAAA,CACb;EAED,OACEN,IAAA,CAACL,IAAI;IAACmB,KAAK,EAAEI,MAAM,CAACI,SAAU;IAAAF,QAAA,EAC5BpB,IAAA,CAACF,QAAQ;MACPM,IAAI,EAAEA,IAAK;MACXG,UAAU,EAAEA,UAAW;MACvBgB,YAAY,EAAE,SAAAA,aAACd,IAAI;QAAA,OAAKA,IAAI,CAACJ,EAAE,CAACmB,QAAQ,CAAC,CAAC;MAAA;IAAC,CAC5C;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMN,MAAM,GAAG;EACbI,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDP,QAAQ,EAAE;IACRO,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDP,QAAQ,EAAE;IACRQ,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,eAAe5B,QAAQ;AAAC6B,qBAAA,CAAAC,MAAA;EAAAb,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAAc,OAAA;IAAA;EAAA;EAAAC,MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}