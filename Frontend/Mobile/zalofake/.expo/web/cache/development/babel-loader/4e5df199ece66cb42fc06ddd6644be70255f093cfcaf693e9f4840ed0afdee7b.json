{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChonThanhVienNhom = function ChonThanhVienNhom() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var _useState3 = useState('ganDay'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTab = _useState4[0],\n    setSelectedTab = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMembers = _useState6[0],\n    setSelectedMembers = _useState6[1];\n  var danhBaData = [{\n    id: '1',\n    name: 'Nguyen Van A',\n    image: require(\"./images/avatar1.jpg\")\n  }, {\n    id: '2',\n    name: 'Tran Thi B',\n    image: require(\"./images/avatar2.jpg\")\n  }];\n  var ganDayData = [{\n    id: '3',\n    name: 'Le Van C',\n    image: require(\"./images/avatar3.jpg\")\n  }, {\n    id: '4',\n    name: 'Pham Thi D',\n    image: require(\"./images/avatar4.jpg\")\n  }];\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10\n      },\n      children: [_jsx(Image, {\n        source: item.image,\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          marginRight: 10\n        }\n      }), _jsx(Text, {\n        children: item.name\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleCheckboxToggle(item);\n        },\n        children: _jsx(Text, {\n          children: selectedMembers.includes(item.id) ? '✔️' : '◻️'\n        })\n      })]\n    });\n  };\n  var handleCheckboxToggle = function handleCheckboxToggle(item) {\n    var updatedSelectedMembers = selectedMembers.includes(item.id) ? selectedMembers.filter(function (id) {\n      return id !== item.id;\n    }) : [].concat(_toConsumableArray(selectedMembers), [item.id]);\n    setSelectedMembers(updatedSelectedMembers);\n  };\n  var renderTabContent = function renderTabContent() {\n    var data = selectedTab === 'ganDay' ? ganDayData : danhBaData;\n    return _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        paddingHorizontal: 10\n      },\n      placeholder: \"T\\xECm ki\\u1EBFm...\",\n      value: searchText,\n      onChangeText: function onChangeText(text) {\n        return setSearchText(text);\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginVertical: 10\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelectedTab('ganDay');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedTab === 'ganDay' ? 'blue' : 'black'\n          },\n          children: \"G\\u1EA7n \\u0111\\xE2y\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelectedTab('danhBa');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedTab === 'danhBa' ? 'blue' : 'black'\n          },\n          children: \"Danh b\\u1EA1\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      children: renderTabContent()\n    }), selectedMembers.length > 0 && _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10\n      },\n      children: [_jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: selectedMembers.map(function (memberId) {\n          var member = [].concat(ganDayData, danhBaData).find(function (item) {\n            return item.id === memberId;\n          });\n          return _jsxs(View, {\n            style: {\n              margin: 5\n            },\n            children: [_jsx(Image, {\n              source: member.image,\n              style: {\n                width: 30,\n                height: 30,\n                borderRadius: 15\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleCheckboxToggle(member);\n              },\n              children: _jsx(Text, {\n                children: \"\\u274C\"\n              })\n            })]\n          }, member.id);\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleCreateGroup();\n        },\n        children: _jsx(Text, {\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            padding: 10,\n            borderRadius: 5\n          },\n          children: \"T\\u1EA1o nh\\xF3m\"\n        })\n      })]\n    })]\n  });\n};\nexport default ChonThanhVienNhom;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ScrollView","FlatList","Image","jsx","_jsx","jsxs","_jsxs","ChonThanhVienNhom","_useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","selectedTab","setSelectedTab","_useState5","_useState6","selectedMembers","setSelectedMembers","danhBaData","id","name","image","require","ganDayData","renderItem","_ref","item","style","flexDirection","alignItems","padding","children","source","width","height","borderRadius","marginRight","onPress","handleCheckboxToggle","includes","updatedSelectedMembers","filter","concat","_toConsumableArray","renderTabContent","data","keyExtractor","flex","borderColor","borderWidth","paddingHorizontal","placeholder","value","onChangeText","text","justifyContent","marginVertical","color","length","horizontal","showsHorizontalScrollIndicator","map","memberId","member","find","margin","handleCreateGroup","backgroundColor","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/components/ChonThanhVienNhom.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, FlatList, Image } from 'react-native';\r\n\r\nconst ChonThanhVienNhom = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [selectedTab, setSelectedTab] = useState('ganDay');\r\n  const [selectedMembers, setSelectedMembers] = useState([]);\r\n\r\n  const danhBaData = [\r\n    { id: '1', name: 'Nguyen Van A', image: require('./images/avatar1.jpg') },\r\n    { id: '2', name: 'Tran Thi B', image: require('./images/avatar2.jpg') },\r\n    // ...Thêm dữ liệu danh bạ khác\r\n  ];\r\n\r\n  const ganDayData = [\r\n    { id: '3', name: 'Le Van C', image: require('./images/avatar3.jpg') },\r\n    { id: '4', name: 'Pham Thi D', image: require('./images/avatar4.jpg') },\r\n    // ...Thêm dữ liệu gần đây khác\r\n  ];\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={{ flexDirection: 'row', alignItems: 'center', padding: 10 }}>\r\n      <Image source={item.image} style={{ width: 50, height: 50, borderRadius: 25, marginRight: 10 }} />\r\n      <Text>{item.name}</Text>\r\n      <TouchableOpacity onPress={() => handleCheckboxToggle(item)}>\r\n        <Text>{selectedMembers.includes(item.id) ? '✔️' : '◻️'}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  const handleCheckboxToggle = (item) => {\r\n    // Logic xử lý khi người dùng check/uncheck checkbox\r\n    // Thêm hoặc xóa item.id từ selectedMembers\r\n    const updatedSelectedMembers = selectedMembers.includes(item.id)\r\n      ? selectedMembers.filter((id) => id !== item.id)\r\n      : [...selectedMembers, item.id];\r\n    setSelectedMembers(updatedSelectedMembers);\r\n  };\r\n\r\n  const renderTabContent = () => {\r\n    const data = selectedTab === 'ganDay' ? ganDayData : danhBaData;\r\n    return (\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={renderItem}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/* TextInput để tìm kiếm */}\r\n      <TextInput\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1, paddingHorizontal: 10 }}\r\n        placeholder=\"Tìm kiếm...\"\r\n        value={searchText}\r\n        onChangeText={(text) => setSearchText(text)}\r\n      />\r\n\r\n      {/* Tabs */}\r\n      <View style={{ flexDirection: 'row', justifyContent: 'space-around', marginVertical: 10 }}>\r\n        <TouchableOpacity onPress={() => setSelectedTab('ganDay')}>\r\n          <Text style={{ color: selectedTab === 'ganDay' ? 'blue' : 'black' }}>Gần đây</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setSelectedTab('danhBa')}>\r\n          <Text style={{ color: selectedTab === 'danhBa' ? 'blue' : 'black' }}>Danh bạ</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Danh sách thành viên */}\r\n      <ScrollView style={{ flex: 1 }}>\r\n        {renderTabContent()}\r\n      </ScrollView>\r\n\r\n      {/* Thanh hiển thị hình ảnh và nút tạo nhóm */}\r\n      {selectedMembers.length > 0 && (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', padding: 10 }}>\r\n          <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n            {selectedMembers.map((memberId) => {\r\n              const member = [...ganDayData, ...danhBaData].find((item) => item.id === memberId);\r\n              return (\r\n                <View key={member.id} style={{ margin: 5 }}>\r\n                  <Image source={member.image} style={{ width: 30, height: 30, borderRadius: 15 }} />\r\n                  <TouchableOpacity onPress={() => handleCheckboxToggle(member)}>\r\n                    <Text>❌</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n\r\n          {/* Nút tạo nhóm */}\r\n          <TouchableOpacity onPress={() => handleCreateGroup()}>\r\n            <Text style={{ backgroundColor: 'blue', color: 'white', padding: 10, borderRadius: 5 }}>Tạo nhóm</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ChonThanhVienNhom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}