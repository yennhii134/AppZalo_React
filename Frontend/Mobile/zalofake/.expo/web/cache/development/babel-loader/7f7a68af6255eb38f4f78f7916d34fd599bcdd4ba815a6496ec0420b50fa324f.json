{"ast":null,"code":"import color from 'color';\nexport const getActiveTintColor = _ref => {\n  let {\n    activeColor,\n    defaultColor,\n    theme\n  } = _ref;\n  if (typeof activeColor === 'string') {\n    return activeColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.onSecondaryContainer;\n  }\n  return defaultColor;\n};\nexport const getInactiveTintColor = _ref2 => {\n  let {\n    inactiveColor,\n    defaultColor,\n    theme\n  } = _ref2;\n  if (typeof inactiveColor === 'string') {\n    return inactiveColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n  return color(defaultColor).alpha(0.5).rgb().string();\n};\nexport const getLabelColor = _ref3 => {\n  let {\n    tintColor,\n    hasColor,\n    focused,\n    defaultColor,\n    theme\n  } = _ref3;\n  if (hasColor) {\n    return tintColor;\n  }\n  if (theme.isV3) {\n    if (focused) {\n      return theme.colors.onSurface;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n  return defaultColor;\n};","map":{"version":3,"names":["color","getActiveTintColor","_ref","activeColor","defaultColor","theme","isV3","colors","onSecondaryContainer","getInactiveTintColor","_ref2","inactiveColor","onSurfaceVariant","alpha","rgb","string","getLabelColor","_ref3","tintColor","hasColor","focused","onSurface"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\utils.ts"],"sourcesContent":["import color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport type { black, white } from '../../styles/themes/v2/colors';\n\ntype BaseProps = {\n  defaultColor: typeof black | typeof white;\n  theme: InternalTheme;\n};\n\nexport const getActiveTintColor = ({\n  activeColor,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  activeColor: string | undefined;\n}) => {\n  if (typeof activeColor === 'string') {\n    return activeColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSecondaryContainer;\n  }\n\n  return defaultColor;\n};\n\nexport const getInactiveTintColor = ({\n  inactiveColor,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  inactiveColor: string | undefined;\n}) => {\n  if (typeof inactiveColor === 'string') {\n    return inactiveColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(defaultColor).alpha(0.5).rgb().string();\n};\n\nexport const getLabelColor = ({\n  tintColor,\n  hasColor,\n  focused,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  tintColor: string;\n  hasColor: boolean;\n  focused: boolean;\n}) => {\n  if (hasColor) {\n    return tintColor;\n  }\n\n  if (theme.isV3) {\n    if (focused) {\n      return theme.colors.onSurface;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return defaultColor;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAUzB,OAAO,MAAMC,kBAAkB,GAAGC,IAAA,IAM5B;EAAA,IAN6B;IACjCC,WAAW;IACXC,YAAY;IACZC;EAGF,CAAC,GAAAH,IAAA;EACC,IAAI,OAAOC,WAAW,KAAK,QAAQ,EAAE;IACnC,OAAOA,WAAW;EACpB;EAEA,IAAIE,KAAK,CAACC,IAAI,EAAE;IACd,OAAOD,KAAK,CAACE,MAAM,CAACC,oBAAoB;EAC1C;EAEA,OAAOJ,YAAY;AACrB,CAAC;AAED,OAAO,MAAMK,oBAAoB,GAAGC,KAAA,IAM9B;EAAA,IAN+B;IACnCC,aAAa;IACbP,YAAY;IACZC;EAGF,CAAC,GAAAK,KAAA;EACC,IAAI,OAAOC,aAAa,KAAK,QAAQ,EAAE;IACrC,OAAOA,aAAa;EACtB;EAEA,IAAIN,KAAK,CAACC,IAAI,EAAE;IACd,OAAOD,KAAK,CAACE,MAAM,CAACK,gBAAgB;EACtC;EAEA,OAAOZ,KAAK,CAACI,YAAY,CAAC,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGC,KAAA,IAUvB;EAAA,IAVwB;IAC5BC,SAAS;IACTC,QAAQ;IACRC,OAAO;IACPhB,YAAY;IACZC;EAKF,CAAC,GAAAY,KAAA;EACC,IAAIE,QAAQ,EAAE;IACZ,OAAOD,SAAS;EAClB;EAEA,IAAIb,KAAK,CAACC,IAAI,EAAE;IACd,IAAIc,OAAO,EAAE;MACX,OAAOf,KAAK,CAACE,MAAM,CAACc,SAAS;IAC/B;IACA,OAAOhB,KAAK,CAACE,MAAM,CAACK,gBAAgB;EACtC;EAEA,OAAOR,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}