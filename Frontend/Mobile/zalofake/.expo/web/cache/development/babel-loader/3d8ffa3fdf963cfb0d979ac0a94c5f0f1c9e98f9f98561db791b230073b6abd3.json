{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Toast from \"react-native-toast-message\";\nimport OTPTextView from 'react-native-otp-textinput';\nimport axiosInstance from \"../api/axiosInstance\";\nvar useRegister = function useRegister() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    systemOTP = _useState4[0],\n    setSystemOTP = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOTPVerified = _useState6[0],\n    setIsOTPVerified = _useState6[1];\n  var showToastSuccess = function showToastSuccess(notice) {\n    Toast.show({\n      text1: notice,\n      type: \"success\",\n      topOffset: 0,\n      position: \"top\"\n    });\n  };\n  var showToastError = function showToastError(notice) {\n    Toast.show({\n      text1: notice,\n      type: \"error\",\n      topOffset: 0,\n      position: \"top\"\n    });\n  };\n  var verifyOTP = function () {\n    var _ref = _asyncToGenerator(function* (userOTP, systemOTP) {\n      if (userOTP === systemOTP.otp && systemOTP.expires >= Date.now()) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return function verifyOTP(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var sendOTP = function () {\n    var _ref2 = _asyncToGenerator(function* (email) {\n      var response = yield axiosInstance.post(\"/auth/send-otp\", {\n        email: email\n      });\n      var data = response.data;\n      return data.totp;\n    });\n    return function sendOTP(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getOTP = function () {\n    var _ref3 = _asyncToGenerator(function* (email) {\n      try {\n        setIsLoading(true);\n        setIsOTPVerified(false);\n        var otp = yield sendOTP(email);\n        if (otp) {\n          showToastSuccess(\"OTP sent to your email\");\n          setIsLoading(false);\n          setSystemOTP(otp);\n          return true;\n        } else {\n          showToastError(\"Failed to send OTP\");\n          setIsLoading(false);\n          return false;\n        }\n      } catch (error) {\n        console.log(error);\n        showToastError(\"Failed to send OTP\");\n        setIsLoading(false);\n        return false;\n      }\n    });\n    return function getOTP(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var verifyEmailAndRegister = function () {\n    var _ref4 = _asyncToGenerator(function* (textEmail, otp, textPhone, name, dob, selectedGender, textPW) {\n      var verified = yield verifyOTP(otp, systemOTP);\n      setIsOTPVerified(verified);\n      try {\n        setIsLoading(true);\n        if (verified) {\n          var response = yield axiosInstance.post(\"/auth/register\", {\n            phone: textPhone,\n            email: textEmail,\n            password: textPW,\n            name: name,\n            dob: dob,\n            gender: selectedGender.toString(),\n            userOTP: otp\n          });\n          setIsOTPVerified(true);\n          var data = response.data;\n          console.log(data);\n          if (response.status === 201) {\n            setIsLoading(false);\n            showToastSuccess(\"Account created successfully\");\n            return true;\n          } else {\n            setIsLoading(false);\n            showToastError(data.response.message);\n            return false;\n          }\n        } else {\n          showToastError(\"Invalid OTP\");\n          setIsLoading(false);\n          return false;\n        }\n      } catch (error) {\n        console.log(error);\n        setIsOTPVerified(true);\n        setIsLoading(false);\n        showToastError(error.response.data.message);\n        return false;\n      }\n    });\n    return function verifyEmailAndRegister(_x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return {\n    isLoading: isLoading,\n    isOTPVerified: isOTPVerified,\n    getOTP: getOTP,\n    verifyEmailAndRegister: verifyEmailAndRegister\n  };\n};\nexport default useRegister;","map":{"version":3,"names":["useState","Toast","OTPTextView","axiosInstance","useRegister","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","systemOTP","setSystemOTP","_useState5","_useState6","isOTPVerified","setIsOTPVerified","showToastSuccess","notice","show","text1","type","topOffset","position","showToastError","verifyOTP","_ref","_asyncToGenerator","userOTP","otp","expires","Date","now","_x","_x2","apply","arguments","sendOTP","_ref2","email","response","post","data","totp","_x3","getOTP","_ref3","error","console","log","_x4","verifyEmailAndRegister","_ref4","textEmail","textPhone","name","dob","selectedGender","textPW","verified","phone","password","gender","toString","status","message","_x5","_x6","_x7","_x8","_x9","_x10","_x11"],"sources":["C:/BaoTruc/iuh/ky2nam4/CNM/DeTai/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useRegister.js"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport OTPTextView from 'react-native-otp-textinput';\r\nimport axiosInstance from \"../api/axiosInstance\";\r\n\r\n\r\n\r\nconst useRegister = () => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [systemOTP, setSystemOTP] = useState(null);\r\n    const [isOTPVerified, setIsOTPVerified] = useState(false);\r\n\r\n    const showToastSuccess = (notice) => {\r\n        Toast.show({\r\n          text1: notice,\r\n          type: \"success\",\r\n          topOffset: 0,\r\n          position: \"top\",\r\n        });\r\n      };\r\n      const showToastError = (notice) => {\r\n        Toast.show({\r\n          text1: notice,\r\n          type: \"error\",\r\n          topOffset: 0,\r\n          position: \"top\",\r\n        });\r\n      };\r\n\r\n\r\n    const verifyOTP = async (userOTP, systemOTP) => {\r\n        if (userOTP === systemOTP.otp && systemOTP.expires >= Date.now()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const sendOTP = async (email) => {\r\n        const response = await axiosInstance.post(\"/auth/send-otp\", {\r\n            email,\r\n        });\r\n        const data = response.data;\r\n        return data.totp;\r\n    };\r\n\r\n    const getOTP = async (email) => {\r\n        try {\r\n            setIsLoading(true);\r\n            setIsOTPVerified(false);\r\n            const otp = await sendOTP(email);\r\n\r\n            if (otp) {\r\n                showToastSuccess(\"OTP sent to your email\");\r\n                setIsLoading(false);\r\n                setSystemOTP(otp);\r\n                return true;\r\n            } else {\r\n                showToastError(\"Failed to send OTP\");\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            showToastError(\"Failed to send OTP\");\r\n            setIsLoading(false);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const verifyEmailAndRegister = async (\r\n        textEmail,\r\n        otp,\r\n        textPhone,\r\n        name,\r\n        dob,\r\n        selectedGender,\r\n        textPW\r\n    ) => {\r\n        const verified = await verifyOTP(otp, systemOTP);\r\n        setIsOTPVerified(verified);\r\n        try {\r\n            setIsLoading(true);\r\n            if (verified) {\r\n                const response = await axiosInstance.post(\"/auth/register\", {\r\n                    phone: textPhone,\r\n                    email: textEmail,\r\n                    password: textPW,\r\n                    name: name,\r\n                    dob: dob,\r\n                    gender: selectedGender.toString(),\r\n                    userOTP: otp\r\n                });\r\n                setIsOTPVerified(true);\r\n                const data = response.data;\r\n                console.log(data);\r\n\r\n                if (response.status === 201) {\r\n                    setIsLoading(false);\r\n                    showToastSuccess(\"Account created successfully\");\r\n                    return true;\r\n                } else {\r\n                    setIsLoading(false);\r\n                    showToastError(data.response.message);\r\n                    return false;\r\n                }\r\n            } else {\r\n                showToastError(\"Invalid OTP\");\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setIsOTPVerified(true);\r\n            setIsLoading(false);\r\n            showToastError(error.response.data.message);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return { isLoading, isOTPVerified, getOTP, verifyEmailAndRegister };\r\n};\r\n\r\nexport default useRegister;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}