{"ast":null,"code":"import color from 'color';\nconst getUnderlayColor = _ref => {\n  let {\n    theme,\n    calculatedRippleColor,\n    underlayColor\n  } = _ref;\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\nconst getRippleColor = _ref2 => {\n  let {\n    theme,\n    rippleColor\n  } = _ref2;\n  if (rippleColor) {\n    return rippleColor;\n  }\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\nexport const getTouchableRippleColors = _ref3 => {\n  let {\n    theme,\n    rippleColor,\n    underlayColor\n  } = _ref3;\n  const calculatedRippleColor = getRippleColor({\n    theme,\n    rippleColor\n  });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor\n    })\n  };\n};","map":{"version":3,"names":["color","getUnderlayColor","_ref","theme","calculatedRippleColor","underlayColor","isV3","rgb","string","fade","getRippleColor","_ref2","rippleColor","colors","onSurface","alpha","dark","text","getTouchableRippleColors","_ref3","calculatedUnderlayColor"],"sources":["D:\\HK2_Nam4\\CNM\\BTL\\New_3\\AppZalo_CNM\\Frontend\\Mobile\\zalofake\\node_modules\\react-native-paper\\src\\components\\TouchableRipple\\utils.ts"],"sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  calculatedRippleColor: ColorValue;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,gBAAgB,GAAGC,IAAA,IAQnB;EAAA,IARoB;IACxBC,KAAK;IACLC,qBAAqB;IACrBC;EAKF,CAAC,GAAAH,IAAA;EACC,IAAIG,aAAa,IAAI,IAAI,EAAE;IACzB,OAAOA,aAAa;EACtB;EAEA,IAAIF,KAAK,CAACG,IAAI,EAAE;IACd,OAAON,KAAK,CAACI,qBAAqB,CAAC,CAACG,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACpD;EAEA,OAAOR,KAAK,CAACI,qBAAqB,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,CAACF,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAC9D,CAAC;AAED,MAAME,cAAc,GAAGC,KAAA,IAMjB;EAAA,IANkB;IACtBR,KAAK;IACLS;EAIF,CAAC,GAAAD,KAAA;EACC,IAAIC,WAAW,EAAE;IACf,OAAOA,WAAW;EACpB;EAEA,IAAIT,KAAK,CAACG,IAAI,EAAE;IACd,OAAON,KAAK,CAACG,KAAK,CAACU,MAAM,CAACC,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACjE;EAEA,IAAIL,KAAK,CAACa,IAAI,EAAE;IACd,OAAOhB,KAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAC5D;EACA,OAAOR,KAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMU,wBAAwB,GAAGC,KAAA,IAQlC;EAAA,IARmC;IACvChB,KAAK;IACLS,WAAW;IACXP;EAKF,CAAC,GAAAc,KAAA;EACC,MAAMf,qBAAqB,GAAGM,cAAc,CAAC;IAAEP,KAAK;IAAES;EAAY,CAAC,CAAC;EACpE,OAAO;IACLR,qBAAqB;IACrBgB,uBAAuB,EAAEnB,gBAAgB,CAAC;MACxCE,KAAK;MACLC,qBAAqB;MACrBC;IACF,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}