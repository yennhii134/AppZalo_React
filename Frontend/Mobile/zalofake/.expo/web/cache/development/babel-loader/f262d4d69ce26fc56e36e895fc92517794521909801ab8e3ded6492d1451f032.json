{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\nvar CountryDropdown = function CountryDropdown() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCountry = _useState2[0],\n    setSelectedCountry = _useState2[1];\n  return _jsx(View, {\n    style: {\n      width: 50,\n      borderColor: \"red\",\n      borderWidth: 1\n    },\n    children: _jsx(SelectDropdown, {\n      data: countries,\n      onSelect: function onSelect(selectedItem, index) {\n        setSelectedCountry(selectedItem);\n      },\n      buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n        return selectedItem;\n      },\n      rowTextForSelection: function rowTextForSelection(item, index) {\n        return item;\n      }\n    })\n  });\n};\nexport default CountryDropdown;","map":{"version":3,"names":["React","useState","SelectDropdown","jsx","_jsx","countries","CountryDropdown","_useState","_useState2","_slicedToArray","selectedCountry","setSelectedCountry","View","style","width","borderColor","borderWidth","children","data","onSelect","selectedItem","index","buttonTextAfterSelection","rowTextForSelection","item"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/components/LoginComponents/CountryDropdown.js"],"sourcesContent":["import { View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\n\r\nconst countries = [\"VN\", \"USA\", \"UK\", \"Cam\"];\r\n\r\nconst CountryDropdown = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n\r\n  return (\r\n    <View style={{ width: 50, borderColor: \"red\", borderWidth: 1 }}>\r\n      <SelectDropdown\r\n        data={countries}\r\n        onSelect={(selectedItem, index) => {\r\n          setSelectedCountry(selectedItem);\r\n        }}\r\n        buttonTextAfterSelection={(selectedItem, index) => {\r\n          return selectedItem;\r\n        }}\r\n        rowTextForSelection={(item, index) => {\r\n          return item;\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CountryDropdown;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1D,IAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AAE5C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAA8CN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,OACEJ,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC7Db,IAAA,CAACF,cAAc;MACbgB,IAAI,EAAEb,SAAU;MAChBc,QAAQ,EAAE,SAAAA,SAACC,YAAY,EAAEC,KAAK,EAAK;QACjCV,kBAAkB,CAACS,YAAY,CAAC;MAClC,CAAE;MACFE,wBAAwB,EAAE,SAAAA,yBAACF,YAAY,EAAEC,KAAK,EAAK;QACjD,OAAOD,YAAY;MACrB,CAAE;MACFG,mBAAmB,EAAE,SAAAA,oBAACC,IAAI,EAAEH,KAAK,EAAK;QACpC,OAAOG,IAAI;MACb;IAAE,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAelB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}