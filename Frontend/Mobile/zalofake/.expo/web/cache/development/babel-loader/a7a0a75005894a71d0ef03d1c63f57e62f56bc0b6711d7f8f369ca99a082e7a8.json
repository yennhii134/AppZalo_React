{"ast":null,"code":"import { useState } from \"react\";\nimport axiosInstance from \"../api/axiosInstance\";\nconst useGroup = () => {\n  const [group, setGroup] = useState(null);\n  const [groups, setGroups] = useState([]);\n  const createGroup = async (nameGroup, idUser) => {\n    try {\n      const response = await axiosInstance.post(\"/groups/create\", {\n        name: nameGroup,\n        members: idUser\n      });\n      if (response.status === 201) {\n        return response.data;\n      } else if (response.status === 500) {\n        console.log(\"Create group fail\");\n        return null;\n      }\n    } catch (error) {\n      console.log(\"CreateGroupError:\", error);\n      return null;\n    }\n  };\n  const getGroup = async groupId => {\n    try {\n      const response = await axiosInstance.get(`/groups/get/${groupId}`);\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        setGroup(data.group);\n        return data;\n      }\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  const getGroups = async () => {\n    try {\n      const response = await axiosInstance.get(\"/groups/all\");\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        setGroups(data);\n        return data;\n      }\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  const deleteGroup = async groupId => {\n    try {\n      const response = await axiosInstance.delete(`/groups/delete/${groupId}`);\n      const {\n        status\n      } = response;\n      if (status === 200) {\n        return true;\n      }\n    } catch (error) {\n      console.error(error);\n      throw error;\n    } finally {}\n  };\n  const updateGroup = async (groupId, groupData) => {\n    try {\n      const response = await axiosInstance.put(`/groups/update/${groupId}`, groupData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        return true;\n      }\n    } catch (error) {\n      console.log('1');\n      console.error(error);\n      return false;\n    }\n  };\n  const addMember = async (groupId, members) => {\n    try {\n      const response = await axiosInstance.post(`/groups/addMembers/${groupId}`, members);\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        setGroup(data.group);\n        return data.message;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const removeMember = async (groupId, memberData) => {\n    try {\n      const response = await axiosInstance.post(`/groups/removeMembers/${groupId}`, memberData);\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        setGroup(data.group);\n        return true;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const leaveGroup = async groupId => {\n    try {\n      const response = await axiosInstance.post(`/groups/leave/${groupId}`);\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        setGroup(data.group);\n        return true;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const addAdmin = async groupData => {\n    try {\n      const response = await axiosInstance.post(`/groups/changeAdmins`, groupData);\n      if (response.status === 200) {\n        return true;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getUserById = async id => {\n    try {\n      const response = await axiosInstance.get(`/users/get/uid/${id}`);\n      if (response.status === 200) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"GetUserError\", error);\n      return null;\n    }\n  };\n  const changeAdmins = async (groupId, memberData) => {\n    try {\n      const response = await axiosInstance.post(\"/groups/make-member-to-admin\", {\n        userId: memberData,\n        groupId\n      });\n      const {\n        data,\n        status\n      } = response;\n      if (status === 200) {\n        return data;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return {\n    group,\n    groups,\n    createGroup,\n    getGroup,\n    getGroups,\n    deleteGroup,\n    updateGroup,\n    addMember,\n    removeMember,\n    leaveGroup,\n    addAdmin,\n    getUserById,\n    changeAdmins\n  };\n};\nexport default useGroup;","map":{"version":3,"names":["useState","axiosInstance","useGroup","group","setGroup","groups","setGroups","createGroup","nameGroup","idUser","response","post","name","members","status","data","console","log","error","getGroup","groupId","get","getGroups","deleteGroup","delete","updateGroup","groupData","put","headers","addMember","message","removeMember","memberData","leaveGroup","addAdmin","getUserById","id","changeAdmins","userId"],"sources":["D:/HK2_Nam4/CNM/BTL/New_3/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useGroup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axiosInstance from \"../api/axiosInstance\";\r\n\r\nconst useGroup = () => {\r\n  const [group, setGroup] = useState(null);\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  const createGroup = async (nameGroup, idUser) => {\r\n    try {\r\n      const response = await axiosInstance.post(\"/groups/create\", {\r\n        name: nameGroup,\r\n        members: idUser,\r\n      });\r\n      if (response.status === 201) {\r\n        return response.data;\r\n      } else if (response.status === 500) {\r\n        console.log(\"Create group fail\");\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"CreateGroupError:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getGroup = async (groupId) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/groups/get/${groupId}`);\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setGroup(data.group);\r\n        return data\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null\r\n    }\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/groups/all\");\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setGroups(data);\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async (groupId) => {\r\n    try {\r\n      const response = await axiosInstance.delete(`/groups/delete/${groupId}`);\r\n      const { status } = response;\r\n\r\n      if (status === 200) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    } finally {\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const updateGroup = async (groupId, groupData) => {\r\n    try {\r\n      const response = await axiosInstance.put(\r\n        `/groups/update/${groupId}`,\r\n        groupData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data', // Header cần thiết khi gửi dữ liệu dưới dạng multipart/form-data\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.log('1')\r\n      console.error(error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const addMember = async (groupId, members) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/groups/addMembers/${groupId}`,\r\n        members\r\n      );\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setGroup(data.group);\r\n        return data.message;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeMember = async (groupId, memberData) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/groups/removeMembers/${groupId}`,\r\n        memberData\r\n      );\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setGroup(data.group);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const leaveGroup = async (groupId) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/groups/leave/${groupId}`\r\n      );\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setGroup(data.group);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const addAdmin = async (groupData) => {\r\n    try {\r\n      const response = await axiosInstance.post(`/groups/changeAdmins`,\r\n        groupData\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/users/get/uid/${id}`)\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"GetUserError\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const changeAdmins = async (groupId, memberData) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        \"/groups/make-member-to-admin\",\r\n        {\r\n          userId: memberData,\r\n          groupId,\r\n        }\r\n      );\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n  return {\r\n    group,\r\n    groups,\r\n    createGroup,\r\n    getGroup,\r\n    getGroups,\r\n    deleteGroup,\r\n    updateGroup,\r\n    addMember,\r\n    removeMember,\r\n    leaveGroup,\r\n    addAdmin,\r\n    getUserById,\r\n    changeAdmins\r\n  };\r\n};\r\n\r\nexport default useGroup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}